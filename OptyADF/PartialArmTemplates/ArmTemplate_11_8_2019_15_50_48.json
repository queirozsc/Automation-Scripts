{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Altera Marca Producao')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Paciente Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       'NAO ENCONTRADO' as SIGLA_UNIDADE,\n       'NAO ENCONTRADO' as MARCA,\n       PF.NR_PRONTUARIO\nfrom pessoa_fisica pf",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Atendimento Sadalla - Azure\n\nselect pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'dd/mm/yyyy') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\nobter_cgc_estabelecimento(at.cd_estabelecimento) as CNPJ,\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nat.dt_cancelamento\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'dd/mm/yyyy') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico\n\n\nfrom oft_consulta_medica o,\n     oft_retorno r\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\n'NAO ENCONTRADO' SIGLA_UNIDADE,\n'NAO ENCONTRADO' MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nobter_ds_motivo_status(a.nr_sequencia, a.cd_agenda) as ds_motivo_cancelamento\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand a.cd_pessoa_fisica is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear_Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Clear_Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Pacientes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_telefones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKPACIENTES"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_tipo_agendas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Agendamento Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTIPOAGENDASLOTE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_telefones",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Paciente Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTELEPHONEMASKPACIENTES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Atendimento",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Atendimento Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKATENDIMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Agenda",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_tipo_agendas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKAGENDAMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insere ID",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_marca_Agenda",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Altera_marca_Atendimento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[INSERTIDINAGEND]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nu.dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as sigla_unidade,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca\nfrom usuario u",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Procedimentos Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \np.dt_procedimento dt_procedimento,\np.nr_atendimento nr_atendimento,\np.nr_interno_conta nr_interno_conta,\nc.cd_convenio_parametro cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro)as ds_convenio,\nobter_pessoa_atendimento(p.nr_atendimento, 'N') nm_paciente,\nobter_nome_pf(p.cd_medico_executor) nm_medico,\nobter_nome_setor(obter_setor_atendimento(p.nr_atendimento)) ds_setor,\ndecode(p.ie_tiss_tipo_guia,7,'M','P') ie_identificador,\np.cd_procedimento cd_procedimento,\nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) ds_procedimento,\np.qt_procedimento qt_procedimento,\np.vl_medico as vl_medico,\np.vl_procedimento vl_procedimento,\nobter_valor_conta(p.nr_interno_conta,0) vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(p.nr_interno_conta,'C')) status_conta,\nobter_cgc_estabelecimento(b.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n(select r.ds_grupo_receita from grupo_receita r where r.nr_sequencia = a.nr_seq_grupo_rec) as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom procedimento_paciente p, procedimento a, atendimento_paciente b, conta_paciente c\nwhere ((a.cd_procedimento = p.cd_procedimento) and (a.ie_origem_proced = p.ie_origem_proced))\nand    b.nr_atendimento = p.nr_atendimento\nand p.nr_interno_conta = c.nr_interno_conta (+)\nand p.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced) <> 10\nand p.vl_procedimento > 0 \nand obter_se_atend_retorno(p.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Materiais Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select m.dt_atendimento  dt_procedimento,\nm.nr_atendimento  nr_atendimento,\nm.nr_interno_conta  nr_interno_conta,\nc.cd_convenio_parametro  cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nobter_pessoa_atendimento(m.nr_atendimento, 'N')  nm_paciente,\n(select obter_nome_pf(x.cd_medico_cirurgiao) from cirurgia x where x.nr_cirurgia = m.nr_cirurgia) as nm_medico,\nobter_nome_setor(obter_setor_atendimento(m.nr_atendimento))  ds_setor,\n'M'  ie_identificador,\nm.cd_material  cd_procedimento,\nobter_desc_material(m.cd_material)  ds_procedimento,\nm.qt_material  qt_procedimento,\n0 vl_medico,\nm.vl_material vl_procedimento,\nobter_valor_conta(c.nr_interno_conta,0)  vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(c.nr_interno_conta,'C'))  status_conta,\nobter_cgc_estabelecimento(d.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n' ' as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom material_atend_paciente m,\natendimento_paciente d, conta_paciente c\nwhere d.nr_atendimento = m.nr_atendimento\nand m.nr_interno_conta = c.nr_interno_conta (+)\nand m.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand m.vl_material > 0\nand obter_se_atend_retorno(m.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Procedimentos Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Producao Materiais Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UPDATETRADEMARKCOBRANCA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SadallaTasyPrdDataSet')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Pacientes')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Atendimento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Consulta')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Agendamento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Cobranca_Paciente_Unidade')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bilhete Ligacoes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB não encontrado!",
											"ErrorMessage": "O arquivo HOB\\BilhetesLigacoes não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB Bilhetes",
									"description": "Envia os dados do CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSAG failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG não encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\BilhetesLigacoes não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send DH failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH não encontrado!",
											"ErrorMessage": "O arquivo DH\\BilhetesLigacoes não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSL failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL não encontrado!",
											"ErrorMessage": "O arquivo HOSL\\BilhetesLigacoes não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send INOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\BilheteLigacoes não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI BilheteLigacoes",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "String"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "String"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Paciente HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       'NAO ENCONTRADO' as SIGLA_UNIDADE,\n       'NAO ENCONTRADO' as MARCA,\n       PF.NR_PRONTUARIO\nfrom pessoa_fisica pf",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Atendimento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Atendimento HOB - Azure\n\nselect pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'dd/mm/yyyy') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\nobter_cgc_estabelecimento(at.cd_estabelecimento) as CNPJ,\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nat.dt_cancelamento\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Consulta HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta HOB - Azure\n\nselect o.nr_sequencia as nr_sequencia, \nto_char(o.dt_atualizacao,'dd/mm/yyyy') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, \no.cd_medico as cd_medico ,\nobter_nome_pf(o.cd_medico) as nm_medico, \nc.qt_periodo||' '||c.ie_periodo as ds_retorno,  \nsubstr(z.conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico\n\nfrom oft_consulta o,\n     (SELECT a.nr_seq_consulta, b.ds_resultado as conduta\n      FROM   med_avaliacao_paciente a \n      inner join med_avaliacao_result b ON b.nr_seq_avaliacao = a.nr_sequencia \n      WHERE  a.nr_seq_tipo_avaliacao = 34 \n      and  b.nr_seq_item = 457 --456, 458 ) \n      GROUP  BY a.nr_seq_consulta, b.ds_resultado) z,\n      oft_conduta c\nwhere o.nr_sequencia = z.nr_seq_consulta\nand o.nr_sequencia = c.nr_seq_consulta\nand o.nr_atendimento is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Agendamento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDAMENTO HOB - Azure\n\nselect  a.cd_pessoa_fisica, a.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\n'NAO ENCONTRADO' SIGLA_UNIDADE,\n'NAO ENCONTRADO' MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nobter_ds_motivo_status(a.nr_sequencia, a.cd_agenda) as ds_motivo_cancelamento\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.cd_procedencia = p.cd_procedencia (+)\nand ac.nr_sequencia = a.nr_seq_classif_agenda (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand a.cd_pessoa_fisica is not null\nand ag.cd_tipo_agenda = 2",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Altera_tipo_agendas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Agendamento HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTIPOAGENDASLOTE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Atendimento",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Atendimento HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKATENDIMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_telefones",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Paciente HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTELEPHONEMASKPACIENTES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Pacientes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_telefones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKPACIENTES"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Agendamento",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_tipo_agendas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKAGENDAMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insere ID",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_marca_Atendimento",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Altera_marca_Agendamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[INSERTIDINAGEND]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Usuarios HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nu.dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as sigla_unidade,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca\nfrom usuario u",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Procedimentos HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \np.dt_procedimento dt_procedimento,\np.nr_atendimento nr_atendimento,\np.nr_interno_conta nr_interno_conta,\nc.cd_convenio_parametro cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro)as ds_convenio,\nobter_pessoa_atendimento(p.nr_atendimento, 'N') nm_paciente,\nobter_nome_pf(p.cd_medico_executor) nm_medico,\nobter_nome_setor(obter_setor_atendimento(p.nr_atendimento)) ds_setor,\ndecode(p.ie_tiss_tipo_guia,7,'M','P') ie_identificador,\np.cd_procedimento cd_procedimento,\nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) ds_procedimento,\np.qt_procedimento qt_procedimento,\np.vl_medico as vl_medico,\np.vl_procedimento vl_procedimento,\nobter_valor_conta(p.nr_interno_conta,0) vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(p.nr_interno_conta,'C')) status_conta,\nobter_cgc_estabelecimento(b.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n(select r.ds_grupo_receita from grupo_receita r where r.nr_sequencia = a.nr_seq_grupo_rec) as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom procedimento_paciente p, procedimento a, atendimento_paciente b, conta_paciente c\nwhere ((a.cd_procedimento = p.cd_procedimento) and (a.ie_origem_proced = p.ie_origem_proced))\nand    b.nr_atendimento = p.nr_atendimento\nand p.nr_interno_conta = c.nr_interno_conta (+)\nand p.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced) <> 10\nand p.vl_procedimento > 0 \nand obter_se_atend_retorno(p.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Materiais HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select m.dt_atendimento  dt_procedimento,\nm.nr_atendimento  nr_atendimento,\nm.nr_interno_conta  nr_interno_conta,\nc.cd_convenio_parametro  cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nobter_pessoa_atendimento(m.nr_atendimento, 'N')  nm_paciente,\n(select obter_nome_pf(x.cd_medico_cirurgiao) from cirurgia x where x.nr_cirurgia = m.nr_cirurgia) as nm_medico,\nobter_nome_setor(obter_setor_atendimento(m.nr_atendimento))  ds_setor,\n'M'  ie_identificador,\nm.cd_material  cd_procedimento,\nobter_desc_material(m.cd_material)  ds_procedimento,\nm.qt_material  qt_procedimento,\n0 vl_medico,\nm.vl_material vl_procedimento,\nobter_valor_conta(c.nr_interno_conta,0)  vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(c.nr_interno_conta,'C'))  status_conta,\nobter_cgc_estabelecimento(d.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n' ' as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom material_atend_paciente m,\natendimento_paciente d, conta_paciente c\nwhere d.nr_atendimento = m.nr_atendimento\nand m.nr_interno_conta = c.nr_interno_conta (+)\nand m.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand m.vl_material > 0\nand obter_se_atend_retorno(m.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Altera Marca Producao",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Materiais HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Producao Procedimentos HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UPDATETRADEMARKCOBRANCA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CloudTasyPrdDataSet')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Pacientes')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Atendimento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Consulta')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Agendamento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Cobranca_Paciente_Unidade')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Paciente Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       pf.nr_ddd_celular||''||substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'DDT')||''||obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       'NAO ENCONTRADO' as SIGLA_UNIDADE,\n       'NAO ENCONTRADO' as MARCA\nfrom pessoa_fisica pf",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Atendimento HOB - Azure\n\nselect pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'dd/mm/yyyy') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\nobter_cgc_estabelecimento(at.cd_estabelecimento) as CNPJ,\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nat.dt_cancelamento\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_PESSOA_FISICA"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HR_ENTRADA"
										},
										"sink": {
											"name": "HR_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NM_MEDICO"
										},
										"sink": {
											"name": "NM_MEDICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CNPJ"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIGLA_UNIDADE"
										},
										"sink": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDENCIA"
										},
										"sink": {
											"name": "CD_PROCEDENCIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDENCIA"
										},
										"sink": {
											"name": "DS_PROCEDENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DIA"
										},
										"sink": {
											"name": "DIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MES"
										},
										"sink": {
											"name": "MES",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ANO"
										},
										"sink": {
											"name": "ANO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_CANCELAMENTO"
										},
										"sink": {
											"name": "DT_CANCELAMENTO",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'dd/mm/yyyy') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico\n\n\nfrom oft_consulta_medica o,\n     oft_retorno r\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\n'NAO ENCONTRADO' SIGLA_UNIDADE,\n'NAO ENCONTRADO' MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nobter_ds_motivo_status(a.nr_sequencia, a.cd_agenda) as ds_motivo_cancelamento\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand a.cd_pessoa_fisica is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear_Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Clear_Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Pacientes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_telefones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKPACIENTES"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_tipo_agendas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Agendamento Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTIPOAGENDASLOTE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_telefones",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Paciente Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTELEPHONEMASKPACIENTES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Atendimento",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Atendimento Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKATENDIMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_Agenda",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_tipo_agendas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKAGENDAMENTO"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insere ID",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_marca_Agenda",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Altera_marca_Atendimento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[INSERTIDINAGEND]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nu.dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as sigla_unidade,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca\nfrom usuario u",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Procedimentos Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \np.dt_procedimento dt_procedimento,\np.nr_atendimento nr_atendimento,\np.nr_interno_conta nr_interno_conta,\nc.cd_convenio_parametro cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro)as ds_convenio,\nobter_pessoa_atendimento(p.nr_atendimento, 'N') nm_paciente,\nobter_nome_pf(p.cd_medico_executor) nm_medico,\nobter_nome_setor(obter_setor_atendimento(p.nr_atendimento)) ds_setor,\ndecode(p.ie_tiss_tipo_guia,7,'M','P') ie_identificador,\np.cd_procedimento cd_procedimento,\nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) ds_procedimento,\np.qt_procedimento qt_procedimento,\np.vl_medico as vl_medico,\np.vl_procedimento vl_procedimento,\nobter_valor_conta(p.nr_interno_conta,0) vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(p.nr_interno_conta,'C')) status_conta,\nobter_cgc_estabelecimento(b.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n(select r.ds_grupo_receita from grupo_receita r where r.nr_sequencia = a.nr_seq_grupo_rec) as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom procedimento_paciente p, procedimento a, atendimento_paciente b, conta_paciente c\nwhere ((a.cd_procedimento = p.cd_procedimento) and (a.ie_origem_proced = p.ie_origem_proced))\nand    b.nr_atendimento = p.nr_atendimento\nand p.nr_interno_conta = c.nr_interno_conta (+)\nand p.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand obter_area_procedimento(a.cd_procedimento, a.ie_origem_proced) <> 10\nand p.vl_procedimento > 0 \nand obter_se_atend_retorno(p.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Producao Materiais Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select m.dt_atendimento  dt_procedimento,\nm.nr_atendimento  nr_atendimento,\nm.nr_interno_conta  nr_interno_conta,\nc.cd_convenio_parametro  cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nobter_pessoa_atendimento(m.nr_atendimento, 'N')  nm_paciente,\n(select obter_nome_pf(x.cd_medico_cirurgiao) from cirurgia x where x.nr_cirurgia = m.nr_cirurgia) as nm_medico,\nobter_nome_setor(obter_setor_atendimento(m.nr_atendimento))  ds_setor,\n'M'  ie_identificador,\nm.cd_material  cd_procedimento,\nobter_desc_material(m.cd_material)  ds_procedimento,\nm.qt_material  qt_procedimento,\n0 vl_medico,\nm.vl_material vl_procedimento,\nobter_valor_conta(c.nr_interno_conta,0)  vl_conta,\n(select v.ds_valor_dominio from valor_dominio v where v.cd_dominio = 49 and v.vl_dominio =  obter_status_conta(c.nr_interno_conta,'C'))  status_conta,\nobter_cgc_estabelecimento(d.cd_estabelecimento) as CNPJ,\nc.nr_protocolo,\n' ' as nr_seq_grupo_rec,\n\n'NAO ENCONTRADO' as SIGLA_UNIDADE,\n'NAO ENCONTRADO' as MARCA\n\nfrom material_atend_paciente m,\natendimento_paciente d, conta_paciente c\nwhere d.nr_atendimento = m.nr_atendimento\nand m.nr_interno_conta = c.nr_interno_conta (+)\nand m.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand c.nr_interno_conta is not null\nand m.vl_material > 0\nand obter_se_atend_retorno(m.nr_atendimento) <> 'S'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Cobranca_Paciente_Unidade",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Altera Marca Producao",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Materiais Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Producao Procedimentos Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UPDATETRADEMARKCOBRANCA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SadallaTasyPrdDataSet')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Pacientes')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Atendimento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Consulta')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Agendamento')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_TB_Cobranca_Paciente_Unidade')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Teste Bilhetes CSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI BilheteLigacoes",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Usu�rio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "String"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "String"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_TB_Agendamento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geral Atendimentos Unidades"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CD_PESSOA_FISICA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_CONVENIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CNPJ",
						"type": "varchar"
					},
					{
						"name": "DATA_AGENDA",
						"type": "date"
					},
					{
						"name": "HORA_AGENDA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TIPO_AGENDA",
						"type": "varchar"
					},
					{
						"name": "NM_PACIENTE",
						"type": "varchar"
					},
					{
						"name": "DS_PROCEDIMENTO_PRINC",
						"type": "varchar"
					},
					{
						"name": "DS_PROCEDIMENTO_ADIC",
						"type": "varchar"
					},
					{
						"name": "IE_QUANTIDADE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NM_USUARIO",
						"type": "varchar"
					},
					{
						"name": "NM_MEDICO",
						"type": "varchar"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					},
					{
						"name": "STATUS_AGENDA",
						"type": "varchar"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NR_SEQUENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CD_PROCEDENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_PROCEDENCIA",
						"type": "varchar"
					},
					{
						"name": "DT_AGENDAMENTO",
						"type": "date"
					},
					{
						"name": "DIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MES",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_AGRUPAMENTO",
						"type": "varchar"
					},
					{
						"name": "CD_MOTIVO_CANCELAMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_MOTIVO_CANCELAMENTO",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Agendamento_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_TB_Atendimento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geral Atendimentos Unidades"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CD_PESSOA_FISICA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NM_PESSOA_FISICA",
						"type": "varchar"
					},
					{
						"name": "DT_ENTRADA",
						"type": "date"
					},
					{
						"name": "HR_ENTRADA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NM_MEDICO",
						"type": "varchar"
					},
					{
						"name": "CD_CONVENIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_CONVENIO",
						"type": "varchar"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CNPJ",
						"type": "varchar"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					},
					{
						"name": "CD_PROCEDENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_PROCEDENCIA",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "DIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MES",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DT_CANCELAMENTO",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Atendimento_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_TB_Cobranca_Paciente_Unidade')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geral Atendimentos Unidades"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DT_PROCEDIMENTO",
						"type": "date"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NR_INTERNO_CONTA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_CONVENIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_CONVENIO",
						"type": "varchar"
					},
					{
						"name": "NM_PACIENTE",
						"type": "varchar"
					},
					{
						"name": "NM_MEDICO",
						"type": "varchar"
					},
					{
						"name": "DS_SETOR",
						"type": "varchar"
					},
					{
						"name": "IE_IDENTIFICADOR",
						"type": "char"
					},
					{
						"name": "CD_PROCEDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_PROCEDIMENTO",
						"type": "varchar"
					},
					{
						"name": "QT_PROCEDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VL_MEDICO",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VL_PROCEDIMENTO",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VL_CONTA",
						"type": "float",
						"precision": 15
					},
					{
						"name": "STATUS_CONTA",
						"type": "varchar"
					},
					{
						"name": "CNPJ",
						"type": "varchar"
					},
					{
						"name": "NR_PROTOCOLO",
						"type": "varchar"
					},
					{
						"name": "NR_SEQ_GRUPO_REC",
						"type": "varchar"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Cobranca_Paciente_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_TB_Consulta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geral Atendimentos Unidades"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NR_SEQUENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DT_ATUALIZACAO",
						"type": "date"
					},
					{
						"name": "HR_ATUALIZACAO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_MEDICO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NM_MEDICO",
						"type": "varchar"
					},
					{
						"name": "DS_RETORNO",
						"type": "varchar"
					},
					{
						"name": "DS_CONDUTA",
						"type": "varchar"
					},
					{
						"name": "CD_PESSOA_FISICA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_DIAGNOSTICO",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Consulta_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_TB_Pacientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geral Atendimentos Unidades"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CD_PESSOA_FISICA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NM_PESSOA_FISICA",
						"type": "varchar"
					},
					{
						"name": "NR_CPF",
						"type": "varchar"
					},
					{
						"name": "DT_NASCIMENTO",
						"type": "date"
					},
					{
						"name": "NR_TELEFONE_CELULAR",
						"type": "varchar"
					},
					{
						"name": "NR_TELEFONE",
						"type": "varchar"
					},
					{
						"name": "CNPJ",
						"type": "varchar"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					},
					{
						"name": "NR_PRONTUARIO",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Pacientes_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudTasyPrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudTasyProd_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "OracleTable",
				"structure": [
					{
						"name": "DT_PROCEDIMENTO",
						"type": "DateTime"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "NR_INTERNO_CONTA",
						"type": "Decimal"
					},
					{
						"name": "CD_CONVENIO",
						"type": "Decimal"
					},
					{
						"name": "DS_CONVENIO",
						"type": "String"
					},
					{
						"name": "NM_PACIENTE",
						"type": "String"
					},
					{
						"name": "NM_MEDICO",
						"type": "String"
					},
					{
						"name": "DS_SETOR",
						"type": "String"
					},
					{
						"name": "IE_IDENTIFICADOR",
						"type": "String"
					},
					{
						"name": "CD_PROCEDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "DS_PROCEDIMENTO",
						"type": "String"
					},
					{
						"name": "QT_PROCEDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "VL_MEDICO",
						"type": "Decimal"
					},
					{
						"name": "VL_PROCEDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "VL_CONTA",
						"type": "Double"
					},
					{
						"name": "STATUS_CONTA",
						"type": "String"
					},
					{
						"name": "CNPJ",
						"type": "String"
					},
					{
						"name": "NR_PROTOCOLO",
						"type": "String"
					},
					{
						"name": "NR_SEQ_GRUPO_REC",
						"type": "String"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "String"
					},
					{
						"name": "MARCA",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SadallaTasyPrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SadallaTasyProd_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "OracleTable",
				"structure": [
					{
						"name": "CD_PESSOA_FISICA",
						"type": "String"
					},
					{
						"name": "NM_PESSOA_FISICA",
						"type": "String"
					},
					{
						"name": "DT_ENTRADA",
						"type": "String"
					},
					{
						"name": "HR_ENTRADA",
						"type": "String"
					},
					{
						"name": "NM_MEDICO",
						"type": "String"
					},
					{
						"name": "CD_CONVENIO",
						"type": "Decimal"
					},
					{
						"name": "DS_CONVENIO",
						"type": "String"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "CNPJ",
						"type": "String"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "String"
					},
					{
						"name": "MARCA",
						"type": "String"
					},
					{
						"name": "CD_PROCEDENCIA",
						"type": "Decimal"
					},
					{
						"name": "DS_PROCEDENCIA",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "DIA",
						"type": "String"
					},
					{
						"name": "MES",
						"type": "String"
					},
					{
						"name": "ANO",
						"type": "String"
					},
					{
						"name": "DT_CANCELAMENTO",
						"type": "DateTime"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 0200 AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criado para executar as consultas no HOSAG",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Altera Marca Producao",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-10-08T03:02:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Altera Marca Producao')]"
			]
		}
	]
}