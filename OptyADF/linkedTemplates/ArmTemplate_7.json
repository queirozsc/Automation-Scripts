{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/INOB_CSV_NC_FilasPorHora_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Historicos_FIlasPorHoras_INOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/INOB/Hist√≥ricos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ";",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_HOSL_PrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_HOSL_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_INOB_PrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_INOB_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_IOF_PrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_IOF_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_ITABUNA_PrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_ITABUNA_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_ITAIGARA_PrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_ITAIGARA_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART_Oftalmoclin_Prd_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SMART_Oftalmoclin",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SadallaTasyPrdDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SadallaTasyProd_NEW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Power BI"
				},
				"annotations": [],
				"type": "OracleTable",
				"structure": [
					{
						"name": "NR_SEQUENCIA",
						"type": "Decimal"
					},
					{
						"name": "DT_ATUALIZACAO",
						"type": "String"
					},
					{
						"name": "HR_ATUALIZACAO",
						"type": "String"
					},
					{
						"name": "NR_ATENDIMENTO",
						"type": "Decimal"
					},
					{
						"name": "CD_MEDICO",
						"type": "String"
					},
					{
						"name": "NM_MEDICO",
						"type": "String"
					},
					{
						"name": "DS_RETORNO",
						"type": "String"
					},
					{
						"name": "DS_CONDUTA",
						"type": "String"
					},
					{
						"name": "CD_PESSOA_FISICA",
						"type": "String"
					},
					{
						"name": "DS_DIAGNOSTICO",
						"type": "String"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "String"
					},
					{
						"name": "CNPJ",
						"type": "String"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mondays 0800 AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Workflows Requestia",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2019-10-14T23:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								11
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agendas Projesi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data_ZFaltas_HTML5",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.0:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\nc.nr_sequencia as id_compromisso,\nc.nr_atendimento as nr_atendimento,\nc.cd_pessoa_fisica as id_cliente,\nobter_nome_pf(c.cd_pessoa_fisica) as NomePaciente,\npf.dt_nascimento as DtNascimento,\n'55' || substr(pf.nr_ddd_celular, -2) || substr(replace(replace(replace(replace(pf.nr_telefone_celular, '(', ''), ')', ''), ' ', ''), '-', ''), -9) AS CELULAR,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'M') as email,\nc.cd_convenio idconvenio,\nobter_nome_convenio(c.cd_convenio) as convenio,\nc.cd_plano,\nobter_desc_plano(c.cd_convenio, c.cd_plano) ds_plano,\nc.dt_agenda as datacompromisso,\nto_char(c.hr_inicio, 'hh24:mi:ss') as horacompromisso,\nc.ie_status_agenda as id_status,\nobter_status_agenda_paciente(c.nr_sequencia) as ds_status,\na.cd_agenda,\na.ds_agenda as agenda,\nc.cd_procedimento,\nobter_desc_procedimento(c.cd_procedimento, c.ie_origem_proced) as procedimento,\nobter_empresa_estab(a.cd_estabelecimento) as id_empresa,\nobter_nome_empresa(obter_empresa_estab(a.cd_estabelecimento)) as empresa,\na.cd_estabelecimento as id_unidade,\nobter_nome_estab(a.cd_estabelecimento)as unidade,\nc.ie_autorizacao,\nobter_valor_dominio(1227, c.ie_autorizacao) as autorizacao,\nobter_nome_pf(c.cd_medico_exec) as nm_medico,\nc.dt_agendamento,\na.cd_tipo_agenda  as tipo_agenda,\n'' as tipo_agenda_desc,\na.cd_pessoa_fisica as ds_medico_agenda,\n'' status_paciente\nfrom agenda_paciente c,\nagenda a,\npessoa_fisica pf\nwhere c.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand c.cd_agenda = a.cd_agenda\nand c.cd_pessoa_fisica is not null\nand trunc(c.dt_agenda) between inicio_dia(sysdate - 30) and fim_dia(sysdate + 30)\nand a.cd_agenda not in (283,404) \nand length('55' || substr(pf.nr_ddd_celular, -2) || substr(replace(replace(replace(replace(pf.nr_telefone_celular, '(', ''), ')', ''), ' ', ''), '-', ''), -9)) = 13\norder by 1 desc",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Zero_Faltas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_TRUNCATEZEROFALTAS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_tipo_agenda",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data_ZFaltas_Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Data_ZFaltas_HTML5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTIPOAGENDASPROJESI]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data_ZFaltas_Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\nc.nr_sequencia as id_compromisso,\nc.nr_atendimento as nr_atendimento,\nc.cd_pessoa_fisica as id_cliente,\nobter_nome_pf(c.cd_pessoa_fisica) as NomePaciente,\npf.dt_nascimento as DtNascimento,\n'55' || substr(pf.nr_ddd_celular, -2) || substr(replace(replace(replace(replace(pf.nr_telefone_celular, '(', ''), ')', ''), ' ', ''), '-', ''), -9) AS CELULAR,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'M') as email,\nc.cd_convenio idconvenio,\nobter_nome_convenio(c.cd_convenio) as convenio,\nc.cd_plano,\nobter_desc_plano(c.cd_convenio, c.cd_plano) ds_plano,\nc.dt_agenda as datacompromisso,\nto_char(c.dt_agenda, 'hh24:mi:ss') as horacompromisso,\nc.ie_status_agenda as id_status,\nobter_status_agenda_paciente(c.nr_sequencia) as ds_status,\na.cd_agenda,\na.ds_agenda as agenda,\nc.cd_procedimento,\nobter_desc_procedimento(c.cd_procedimento, c.ie_origem_proced) as procedimento,\nobter_empresa_estab(a.cd_estabelecimento) as id_empresa,\nobter_nome_empresa(obter_empresa_estab(a.cd_estabelecimento)) as empresa,\na.cd_estabelecimento as id_unidade,\nobter_nome_estab(a.cd_estabelecimento)as unidade,\nc.ie_autorizacao,\nobter_valor_dominio(1227, c.ie_autorizacao) as autorizacao,\nobter_nome_pf(a.cd_pessoa_fisica) as nm_medico,\nc.dt_agendamento,\na.cd_tipo_agenda  as tipo_agenda,\n'' as tipo_agenda_desc,\na.cd_pessoa_fisica as ds_medico_agenda,\n'' status_paciente\nfrom agenda_consulta c,\nagenda a,\npessoa_fisica pf\nwhere c.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand c.cd_agenda = a.cd_agenda\nand c.cd_pessoa_fisica is not null\nand trunc(c.dt_agenda) between inicio_dia(sysdate - 30) and fim_dia(sysdate + 30)\nand a.cd_agenda not in (283,404) \nand length('55' || substr(pf.nr_ddd_celular, -2) || substr(replace(replace(replace(replace(pf.nr_telefone_celular, '(', ''), ')', ''), ' ', ''), '-', ''), -9)) = 13\norder by 1 desc",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Zero_Faltas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Altera Status Paciente",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_tipo_agenda",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERSTATUSPACIENTE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SadallaTasyPrdDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agentes por dia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB n√£o encontrado!",
											"ErrorMessage": "O arquivo HOB\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB agentes dia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOSAG",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG agentes dia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure DH",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH n√£o encontrado!",
											"ErrorMessage": "O arquivo DH\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH agentes dia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOSL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSL\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL agentes dia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure INOB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB agentes dia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_AgentesPorDia",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists_copy",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI AgentesPorDia",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorDia",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agentes por hora')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB n√£o encontrado!",
											"ErrorMessage": "O arquivo HOB\\Agentes por Hora n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB Agentes Hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOSAG",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\Agentes por Hora n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG Agentes Hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure DH",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH n√£o encontrado!",
											"ErrorMessage": "O arquivo DH\\Agentes por Hora n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH Agentes Hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOSL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSL\\Agentes por Hora n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL Agentes Hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send INOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Hora n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB Agentes Hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String",
														"format": "hh:mi:ss"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_AgentesPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI AgentesPorHora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Usuario",
														"type": "String"
													},
													"sink": {
														"name": "Usuario",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recusas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recusas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Internas Recebidas",
														"type": "Int32"
													},
													"sink": {
														"name": "Internas_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Transferencias",
														"type": "Int32"
													},
													"sink": {
														"name": "Transferencias",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas",
														"type": "Int32"
													},
													"sink": {
														"name": "Efetuadas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Efetuadas Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Efetuadas_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "% Taxa de Contato",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_de_Contato",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Atendidas",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Internas Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Internas_Recebidas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Efetuadas",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Efetuadas",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Total Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Falado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Agente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Agente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Toque Cliente",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque_Cliente",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Pausa",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Pausa",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Estouro",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Estouro",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo DisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Disponivel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo IndisponÔøΩvel",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Indisponivel",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Logado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Logado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "Tempo Deslogado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Deslogado",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "% Falado x Logado",
														"type": "String"
													},
													"sink": {
														"name": "Falado_x_Logado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_AgentesPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Atendimentos Exames e Cirurgias 90 Dias')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Agendamentos Livres HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDAMENTOS LIVRES HOB - Azure\n\nselect\na.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is null\nand ag.cd_pessoa_fisica is null\nand ag.cd_tipo_agenda = 2\nand a.dt_agenda between sysdate - 90 and sysdate",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos Livres Sadalla",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\nnm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa,\n     estabelecimento e,\n     empresa em\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is null\nand ag.ie_situacao = 'A'\nand a.dt_agenda between sysdate - 90 and sysdate ",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Exames  HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Agendamentos Livres HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\na.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand ag.cd_pessoa_fisica is null\nand ag.cd_tipo_agenda = 2\nand a.dt_agenda between sysdate - 90 and sysdate",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Exames",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cirurgias HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exames  HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\na.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Cirurgia' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\n'' ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand ag.cd_tipo_agenda = 1\nand a.dt_agenda between sysdate - 90 and sysdate",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgias",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Exames  Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Agendamentos Livres Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\na.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand ag.cd_pessoa_fisica is null\nand ag.cd_tipo_agenda = 2\nand a.dt_agenda between sysdate - 90 and sysdate",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Exames",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cirurgias Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exames  Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\na.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Cirurgia' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab SIGLA_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\n'' ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand ag.cd_tipo_agenda = 1\nand a.dt_agenda between sysdate - 90 and sysdate",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgias",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SadallaTasyPrdDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Baixa_Titulos_Pagar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Baixa_Titulos_Pagar",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.nr_titulo, \na.nr_sequencia, \na.dt_baixa, \na.vl_pago,\na.vl_descontos,\na.vl_juros,\na.vl_multa,\na.dt_atualizacao,\n(select c.ds_tipo_baixa from TIPO_BAIXA_CPA c where c.cd_tipo_baixa = a.cd_tipo_baixa) as ds_tipo_baixa,\nobter_ds_transacao(a.nr_seq_movto_trans_fin) as ds_transacao\nfrom titulo_pagar_baixa a",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Baixa_Titulos_Pagar",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Contas a Pagar"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Baixas titulos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Baixa titulos HTML5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(R.CD_ESTABELECIMENTO) AS CD_CGC_ESTAB, \nl.nr_titulo, \nl.dt_recebimento, \nl.vl_recebido, \nl.vl_descontos, \nl.vl_juros, \nl.vl_multa, \nl.dt_atualizacao, \nt.ds_tipo_recebimento,\nX.DS_TRANSACAO,\n'' as MARCA,\n'' as SIGLA_UNIDADE\nfrom titulo_receber r,\n     TITULO_RECEBER_LIQ L,\n     tipo_recebimento t,\n     TRANSACAO_FINANCEIRA X\nwhere r.nr_titulo = l.nr_titulo \nand l.cd_tipo_recebimento = t.cd_tipo_recebimento\nAND l.nr_seq_trans_fin = X.NR_SEQUENCIA\nand r.cd_estabelecimento not in (11)\nand rownum < 50",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Baixa_Titulos_Receber",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Baixa Titulo Sadalla",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(R.CD_ESTABELECIMENTO) AS CD_CGC_ESTAB, \nl.nr_titulo, \nl.dt_recebimento, \nl.vl_recebido, \nl.vl_descontos, \nl.vl_juros, \nl.vl_multa, \nl.dt_atualizacao, \nt.ds_tipo_recebimento,\nX.DS_TRANSACAO,\n'' as MARCA,\n'' as SIGLA_UNIDADE\nfrom titulo_receber r,\n     TITULO_RECEBER_LIQ L,\n     tipo_recebimento t,\n     TRANSACAO_FINANCEIRA X\nwhere r.nr_titulo = l.nr_titulo \nand l.cd_tipo_recebimento = t.cd_tipo_recebimento\nAND l.nr_seq_trans_fin = X.NR_SEQUENCIA\nand r.cd_estabelecimento not in (11)\nand rownum < 50",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Baixa_Titulos_Receber",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Contas a receber"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SadallaTasyPrdDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bilhete Ligacoes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure HOB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB n√£o encontrado!",
											"ErrorMessage": "O arquivo HOB\\BilhetesLigacoes n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB Bilhetes",
									"description": "Envia os dados do CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSAG failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\BilhetesLigacoes n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send DH failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH n√£o encontrado!",
											"ErrorMessage": "O arquivo DH\\BilhetesLigacoes n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSL failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL n√£o encontrado!",
											"ErrorMessage": "O arquivo HOSL\\BilhetesLigacoes n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send INOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\BilheteLigacoes n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB bilhetes",
									"description": "Envia os dados do arquivo CSV para o Azure SQL Server",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "07.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "Int32"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "Double"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "Double"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB n√£o encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI BilheteLigacoes",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Data",
														"type": "DateTime",
														"format": "dd/MM/yyyy",
														"culture": ""
													},
													"sink": {
														"name": "DATA",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Hora",
														"type": "String"
													},
													"sink": {
														"name": "HORA",
														"type": "TimeSpan"
													}
												},
												{
													"source": {
														"name": "UsuÔøΩrio",
														"type": "String"
													},
													"sink": {
														"name": "USUARIO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tipo",
														"type": "String"
													},
													"sink": {
														"name": "TIPO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Origem",
														"type": "String"
													},
													"sink": {
														"name": "ORIGEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destino",
														"type": "String"
													},
													"sink": {
														"name": "DESTINO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String"
													},
													"sink": {
														"name": "STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Centro de Custo",
														"type": "String"
													},
													"sink": {
														"name": "CENTRO_DE_CUSTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Tarifado",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_TARIFADO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Decorrido",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_DECORRIDO",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Campanha",
														"type": "String"
													},
													"sink": {
														"name": "CAMPANHA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "FILA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Unique ID",
														"type": "String"
													},
													"sink": {
														"name": "UNIQUE_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Linked ID",
														"type": "String"
													},
													"sink": {
														"name": "LINKED_ID",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_BilhetesLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_BilheteLigacoes",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Chamados Philips')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Truncate all Philips' tables",
				"activities": [
					{
						"name": "Copy OS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT a.nr_sequencia,\n\t   a.ds_ordem,\n\t   a.nr_seq_localizacao,\n       a.ds_localizacao,\n\t   a.nr_seq_equipamento,\n       a.ds_equipamento,\n\t   a.cd_pessoa_solicitante,\n       a.nm_solicitante,\n\t   a.dt_ordem_servico,\n\t   a.ie_prioridade,\n\t   a.ds_dano_breve,\n\t   a.dt_atualizacao,\n\t   a.nm_usuario,\n\t   a.dt_inicio_desejado,\n\t   a.ds_dano,\n\t   a.dt_fim_previsto,\n\t   a.dt_inicio_real,\n\t   a.dt_fim_real,\n\t   substr(obter_desc_status_os(a.nr_sequencia),1,255) ie_status_ordem,\n\t   a.nr_grupo_planej,\n\t   a.nr_grupo_trabalho,\n\t   a.nr_seq_estagio,\n\t   a.dt_reabertura,\n\t   a.cd_funcao,\n\t   a.ie_classificacao,\n       a.ds_situacao,\n\t   a.ie_grau_satisfacao,\n\t   a.nr_seq_wheb,\n\t   a.ie_origem_os,\n\t   a.ie_tipo_ordem,\n\t   a.nr_seq_trab,\n\t   a.cd_setor,\n\t   a.ds_setor_localizacao,\n\t   a.nm_usuario_exec,\n\t   a.ds_estagio,\n\t   a.dt_inicio_semana,\n\t   a.dt_inicio_mes,\n\t   a.dt_ano,\n\t   a.cd_estabelecimento,\n\t   substr(Man_Obter_Se_Novo_Hist(a.nr_sequencia, 'Allan.C' ),1,3) ie_novo_hist,\n\t   substr(man_obter_dados_estagio(a.nr_seq_estagio,'C'),1,15) ds_cor_fonte_estagio,\n\t   substr(man_obter_dados_estagio(a.nr_seq_estagio,'F'),1,15) ds_cor_fundo_estagio,\n\t   substr(obter_valor_dominio(1197,a.ie_grau_satisfacao),1,255) ds_grau_satisfacao, \n       a.NM_USUARIO_EXEC_PREV,   \n        a.nr_seq_origem,   \n        a.ie_parado,   \n        a.dt_inicio_previsto,   \n        a.dt_conclusao_desejada,   \n        a.ds_setor_atendimento,   \n        a.ds_grupo_trabalho,   \n        SUBSTR(man_obter_complexidade(a.nr_seq_complex),1,100) ds_complexidade,     \n        a.ds_origem_os,   \n        SUBSTR(obter_descricao_padrao('SERVICO','DS_SERVICO', a.nr_seq_servico),1,255) ds_servico,   \n        ROUND(NVL(obter_hora_entre_datas(a.dt_ordem_servico, NVL(a.dt_aceite_os,SYSDATE)),0),0) qt_horas_aberta,   \n        ROUND(NVL(obter_hora_entre_datas(a.dt_aceite_os,NVL(a.dt_fim_real,SYSDATE)),0),0) qt_horas_processo,   \n        ROUND(NVL(obter_hora_entre_datas(a.dt_ordem_servico, NVL(a.dt_fim_real,SYSDATE)),0),0) qt_horas_total,   \n        man_obter_data_ult_hist(a.nr_sequencia) dt_ult_hist\n        FROM\tman_ordem_servico_v2 a\nwhere a.nr_seq_equipamento = 47\norder by 1 desc",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Ordens_Servico_Terceiro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy OS History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select x.nr_seq_ordem_serv, \n       x.nr_sequencia as nr_sequencia_hist,\n       x.ie_origem, \n       x.nr_seq_tipo, \n       x.nm_usuario_lib, \n       x.dt_atualizacao, \n       x.ds_relat_tecnico\nfrom man_ordem_serv_tecnico x",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Ordens_Servico_Hist",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_TRUNCATEOSPHILIPS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Apoio"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Chamados Requestia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clear tables",
						"description": "Truncate all Requestia's tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_TRUNCATEREQUESTS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check request file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_REQUESTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Requests file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check request file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check request file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send requests failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Requestia\\REQUESTS n√£o encontrado!",
											"ErrorMessage": "O arquivo Requestia\\REQUESTS n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy requests",
									"description": "Copy requests data from CSV (stored on Power BI Gateway VM) to Azure SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "REQUEST",
														"type": "String"
													},
													"sink": {
														"name": "REQUEST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CLIENT",
														"type": "String"
													},
													"sink": {
														"name": "CLIENT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIGANAL",
														"type": "String"
													},
													"sink": {
														"name": "ORIGANAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CURRANAL",
														"type": "String"
													},
													"sink": {
														"name": "CURRANAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GROUPANAL",
														"type": "String"
													},
													"sink": {
														"name": "GROUPANAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTANAL",
														"type": "String"
													},
													"sink": {
														"name": "LASTANAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTANLGRP",
														"type": "String"
													},
													"sink": {
														"name": "LASTANLGRP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIGGROUP",
														"type": "String"
													},
													"sink": {
														"name": "ORIGGROUP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CURRGROUP",
														"type": "String"
													},
													"sink": {
														"name": "CURRGROUP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTGROUP",
														"type": "String"
													},
													"sink": {
														"name": "LASTGROUP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GRGROUP",
														"type": "String"
													},
													"sink": {
														"name": "GRGROUP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CATEGORY",
														"type": "String"
													},
													"sink": {
														"name": "CATEGORY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RPRIORITY",
														"type": "String"
													},
													"sink": {
														"name": "RPRIORITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PRODUCT",
														"type": "String"
													},
													"sink": {
														"name": "PRODUCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROCESS",
														"type": "String"
													},
													"sink": {
														"name": "PROCESS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROBLEM",
														"type": "String"
													},
													"sink": {
														"name": "PROBLEM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSTATUS",
														"type": "String"
													},
													"sink": {
														"name": "RSTATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "REQTYPE",
														"type": "String"
													},
													"sink": {
														"name": "REQTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "REQSOURCE",
														"type": "String"
													},
													"sink": {
														"name": "REQSOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOCATION",
														"type": "String"
													},
													"sink": {
														"name": "LOCATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORGUNIT",
														"type": "String"
													},
													"sink": {
														"name": "ORGUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORGUNIT_ROOT",
														"type": "String"
													},
													"sink": {
														"name": "ORGUNIT_ROOT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CHARGE",
														"type": "String"
													},
													"sink": {
														"name": "CHARGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SLEVEL",
														"type": "String"
													},
													"sink": {
														"name": "SLEVEL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EQUIP",
														"type": "String"
													},
													"sink": {
														"name": "EQUIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESOURCEID",
														"type": "String"
													},
													"sink": {
														"name": "RESOURCEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "REQUESTOR",
														"type": "String"
													},
													"sink": {
														"name": "REQUESTOR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "OPENDATE",
														"type": "String"
													},
													"sink": {
														"name": "OPENDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CLOSEDATE",
														"type": "String"
													},
													"sink": {
														"name": "CLOSEDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CLOSED",
														"type": "String"
													},
													"sink": {
														"name": "CLOSED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTACTION",
														"type": "String"
													},
													"sink": {
														"name": "LASTACTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTANALYST",
														"type": "String"
													},
													"sink": {
														"name": "LASTANALYST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTSTATUS",
														"type": "String"
													},
													"sink": {
														"name": "LASTSTATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTPRIORITY",
														"type": "String"
													},
													"sink": {
														"name": "LASTPRIORITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTREOPEN",
														"type": "String"
													},
													"sink": {
														"name": "LASTREOPEN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTACTIONATEND",
														"type": "String"
													},
													"sink": {
														"name": "LASTACTIONATEND",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LASTACTTYPE",
														"type": "String"
													},
													"sink": {
														"name": "LASTACTTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESPDATE",
														"type": "String"
													},
													"sink": {
														"name": "RESPDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TEMPO_RESOLUCAO",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_RESOLUCAO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PRAZO_RESL",
														"type": "String"
													},
													"sink": {
														"name": "PRAZO_RESL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TEMPO_REPOSTA",
														"type": "String"
													},
													"sink": {
														"name": "TEMPO_REPOSTA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PRAZO_RESP",
														"type": "String"
													},
													"sink": {
														"name": "PRAZO_RESP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESPTIME",
														"type": "String"
													},
													"sink": {
														"name": "RESPTIME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESLTIME",
														"type": "String"
													},
													"sink": {
														"name": "RESLTIME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESPMINS",
														"type": "String"
													},
													"sink": {
														"name": "RESPMINS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESLMINS",
														"type": "String"
													},
													"sink": {
														"name": "RESLMINS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESPREMAINS",
														"type": "String"
													},
													"sink": {
														"name": "RESPREMAINS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESLREMAINS",
														"type": "String"
													},
													"sink": {
														"name": "RESLREMAINS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESPMODE",
														"type": "String"
													},
													"sink": {
														"name": "RESPMODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RESLMODE",
														"type": "String"
													},
													"sink": {
														"name": "RESLMODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "NOCOMPUTE",
														"type": "String"
													},
													"sink": {
														"name": "NOCOMPUTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RLOCKED",
														"type": "String"
													},
													"sink": {
														"name": "RLOCKED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ESTIMCOST",
														"type": "String"
													},
													"sink": {
														"name": "ESTIMCOST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TOTALCOST",
														"type": "String"
													},
													"sink": {
														"name": "TOTALCOST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APROVANLTYPE",
														"type": "String"
													},
													"sink": {
														"name": "APROVANLTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APROVANALYST",
														"type": "String"
													},
													"sink": {
														"name": "APROVANALYST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APROVCLITYPE",
														"type": "String"
													},
													"sink": {
														"name": "APROVCLITYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MLEVELAPROV",
														"type": "String"
													},
													"sink": {
														"name": "MLEVELAPROV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CLIENTAPROV",
														"type": "String"
													},
													"sink": {
														"name": "CLIENTAPROV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PACKAGE",
														"type": "String"
													},
													"sink": {
														"name": "PACKAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROJECT",
														"type": "String"
													},
													"sink": {
														"name": "PROJECT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WORKFLOW",
														"type": "String"
													},
													"sink": {
														"name": "WORKFLOW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "REQWORKFLOW",
														"type": "String"
													},
													"sink": {
														"name": "REQWORKFLOW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIGCATEGORY",
														"type": "String"
													},
													"sink": {
														"name": "ORIGCATEGORY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIGPRODUCT",
														"type": "String"
													},
													"sink": {
														"name": "ORIGPRODUCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIGPROCESS",
														"type": "String"
													},
													"sink": {
														"name": "ORIGPROCESS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TOTALATTACH",
														"type": "String"
													},
													"sink": {
														"name": "TOTALATTACH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TOTALATTACHACT",
														"type": "String"
													},
													"sink": {
														"name": "TOTALATTACHACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INSERTDATE",
														"type": "String"
													},
													"sink": {
														"name": "INSERTDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QFORM",
														"type": "String"
													},
													"sink": {
														"name": "QFORM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSURVEY",
														"type": "String"
													},
													"sink": {
														"name": "QSURVEY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSESSIONFORM",
														"type": "String"
													},
													"sink": {
														"name": "QSESSIONFORM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSESSIONSURVEY",
														"type": "String"
													},
													"sink": {
														"name": "QSESSIONSURVEY",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "FILE_REQUEST_AUX",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TABLE_REQUESTS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Calculate fields",
									"description": "Update calculated fields (for example, SLA formula, datetime conversions, business hours difference) for time saving in queries",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy requests",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_CALCULATEREQUESTS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Altera chamado em pausa",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Calculate fields",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_ALTERACHAMADOSPAUSADOS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Update clients",
									"description": "Transport [UNIDADE ATENDIMENTO] field from answers table to requests table, for time saving in queries",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Altera chamado em pausa",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_UPDATEREQUESTCLIENT]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Check sessions file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_QSESSION",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Sessions file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check sessions file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check sessions file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send session failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Requestia\\QSESSION n√£o encontrado!",
											"ErrorMessage": "O arquivo Requestia\\QSESSION n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy sessions",
									"description": "Copy sessions data from CSV (stored on Power BI Gateway VM) to Azure SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "QSESSION",
														"type": "String"
													},
													"sink": {
														"name": "QSESSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSESSIONTITLE",
														"type": "String"
													},
													"sink": {
														"name": "QSESSIONTITLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QCLIENT",
														"type": "String"
													},
													"sink": {
														"name": "QCLIENT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QFORM",
														"type": "String"
													},
													"sink": {
														"name": "QFORM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QVERSION",
														"type": "String"
													},
													"sink": {
														"name": "QVERSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSTATUS",
														"type": "String"
													},
													"sink": {
														"name": "QSTATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QANSWERDATE",
														"type": "String"
													},
													"sink": {
														"name": "QANSWERDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QEXPDATE",
														"type": "String"
													},
													"sink": {
														"name": "QEXPDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QAPPLICATION",
														"type": "String"
													},
													"sink": {
														"name": "QAPPLICATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSURVEYTYPE",
														"type": "String"
													},
													"sink": {
														"name": "QSURVEYTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "REQLOCATION",
														"type": "String"
													},
													"sink": {
														"name": "REQLOCATION",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "FILE_QSESSION",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TABLE_QSESSION",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check answers file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_QANSWER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Answers file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check answers file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check answers file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send answers failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Requestia\\QANSWER n√£o encontrado!",
											"ErrorMessage": "O arquivo Requestia\\QANSWER n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy answers",
									"description": "Copy answers data from CSV (stored on Power BI Gateway VM) to Azure SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "QSESSION",
														"type": "String"
													},
													"sink": {
														"name": "QSESSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QUESTION",
														"type": "String"
													},
													"sink": {
														"name": "QUESTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QANSWER",
														"type": "String"
													},
													"sink": {
														"name": "QANSWER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QANSWERED",
														"type": "String"
													},
													"sink": {
														"name": "QANSWERED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QANSWERDATE",
														"type": "String"
													},
													"sink": {
														"name": "QANSWERDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QSHOW",
														"type": "String"
													},
													"sink": {
														"name": "QSHOW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QORDER",
														"type": "String"
													},
													"sink": {
														"name": "QORDER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QUPDATED",
														"type": "String"
													},
													"sink": {
														"name": "QUPDATED",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "FILE_QANSWER",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TABLE_QANSWER",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check table answers file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Clear tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_QTABLEANSWER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Table answers file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check table answers file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check table answers file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send table answer failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Requestia\\QTABLEANSWER n√£o encontrado!",
											"ErrorMessage": "O arquivo Requestia\\QTABLEANSWER n√£o foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy table answers",
									"description": "Copy anwers table data from CSV (stored on Power BI Gateway VM) to Azure SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "QSESSION",
														"type": "String"
													},
													"sink": {
														"name": "QSESSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TABLE_ROWID",
														"type": "String"
													},
													"sink": {
														"name": "TABLE_ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TABLE_ROWNUM",
														"type": "String"
													},
													"sink": {
														"name": "TABLE_ROWNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_NAME",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_VALUE",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_POSITION",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_POSITION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_ANSWERED",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_ANSWERED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_ANSWERDATE",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_ANSWERDATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_UPDATED",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_UPDATED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COLUMN_VISIBLE",
														"type": "String"
													},
													"sink": {
														"name": "COLUMN_VISIBLE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "FILE_QTABLEANSWER",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TABLE_QTABLEANSWER",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Apoio"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contas a receber HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Titulos HOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT  \n        a.ie_tipo_titulo as NR_TIPO_TITULO,\n        '' as NR_SERIE_TITULO,\n        A.NR_TITULO,\n        A.DT_EMISSAO as DT_EMISSAO_TITULO,\n        A.DT_VENCIMENTO DT_VENCIMENTO_TITULO,\n        A.VL_TITULO VL_TITULO,\n        A.VL_MULTA_FIXO AS VL_MULTA,\n        C.DS_CONVENIO,\n        B.DS_RAZAO_SOCIAL as DS_EMPRESA_CONVENIO,\n        B.CD_CGC AS CONV_CNPJ,\n        0 AS VL_ISS,\n        0 AS VL_IR,\n        0 AS VL_FILME,\n        0 AS VL_PERC_ISS,\n        0 AS VL_PER_IR,\n        A.TX_MULTA AS VL_PERC_MULTA,\n        A.TX_JUROS AS VL_PERC_JURO,\n        A.VL_OUTRAS_DESPESAS AS VL_OUTROS_IMP,\n        0 AS NR_REMESSA,\n        EM.NM_RAZAO_SOCIAL MARCA,\n        E.NM_FANTASIA_ESTAB AS SIGLA_UNIDADE,\n        E.CD_CGC AS CNPJ\nFROM    TITULO_RECEBER A, \n        PESSOA_JURIDICA B,\n        ESTABELECIMENTO E,\n        EMPRESA EM,\n        CONVENIO C\nwhere   b.cd_cgc = a.cd_cgc\nAND     a.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO\nAND     E.CD_EMPRESA = EM.CD_EMPRESA\nAND     B.CD_CGC = C.CD_CGC\nand rownum < 100",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Titulos_Receber",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Contas a receber"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contas a receber HOSL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Titulos HOSL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT  top 100\n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ   \n     FROM cnv,   \n         emp,   \n         nfs,   \n         cfg,   \n         MNS \nLEFT JOIN (SELECT  \n       mns.mns_serie as serie, \n       mns.mns_num as numero, \n       mns.mns_nfs_serie as nfs_serie,\n       mns.mns_nfs_numero as nfs_numero,\n       mns.mns_nfs_tipo as nfs_tipo,    \n       (SELECT sum ( m2.mns_vlr ) \n        \tFROM mns m2, nfs \n\t\t\tWHERE  ( m2.mns_mns_serie = mns.mns_serie ) AND \n\t\t\t\t\t( m2.mns_mns_num = mns.mns_num ) AND \n               ( m2.mns_nfs_serie = nfs.nfs_serie ) AND\n               ( m2.mns_nfs_numero = nfs.nfs_numero ) AND\n               ( m2.mns_nfs_tipo = nfs.nfs_tipo )) AS imposto\n\t\t\tFROM   cnv, \n\t\t\t\t\t emp, \n\t\t\t\t\t nfs, \n\t\t\t\t\t cfg, \n\t\t\t\t\t mns \n\t\t\t WHERE ( emp.emp_cod = nfs.nfs_emp_cod) and  \n\t\t\t\t( MNS.MNS_NFS_SERIE = nfs.nfs_serie) and  \n\t\t\t\t( MNS.MNS_NFS_NUMERO = nfs.nfs_numero) and  \n\t\t\t\t( MNS.MNS_NFS_TIPO = nfs.nfs_tipo) and  \n\t\t\t\t( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n\t\t\t\t( nfs.nfs_tipo <> 'NC' ) AND \n\t\t\t\t( nfs.nfs_dt_vcto >= GETDATE() - 100) AND  \n\t\t\t\t( nfs.nfs_dt_vcto < GETDATE() ) AND\n\t\t\t\t( mns.mns_mns_serie is null ) AND\n\t\t\t\t( mns.mns_ind_liberado = 'S' ) AND \n\t\t\t\t( nfs.nfs_status = 'P' ) AND \n\t\t\t\t( 8=8 ) AND \n\t\t\t\tNOT EXISTS ( SELECT mte.mte_serie FROM mte\n\t\t\t\t\t\t\t\t\tWHERE ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t\t\t\t\t\t\t\t\t\t( mte.mte_tipo in ( 'C', 'E', 'O', 'D' ) ) )\n\t\t\tGROUP  BY   mns.mns_serie , \n\t\t\t\t\t mns.mns_num , \n\t\t\t\t\t mns.mns_nfs_serie ,\n\t\t\t\t\t mns.mns_nfs_numero ,\n\t\t\t\t\t mns.mns_nfs_tipo  \n\n) m ON m.serie = mns.mns_serie and m.numero = mns.mns_num and m.nfs_serie = mns.mns_nfs_serie and m.nfs_numero = mns.mns_nfs_numero and m.nfs_tipo = mns.mns_nfs_tipo\n\n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod) and  \n         ( MNS.MNS_NFS_SERIE = nfs.nfs_serie) and  \n         ( MNS.MNS_NFS_NUMERO = nfs.nfs_numero) and  \n         ( MNS.MNS_NFS_TIPO = nfs.nfs_tipo) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_tipo <> 'NC' ) AND \n\t\t\t( nfs.nfs_dt_vcto >= GETDATE() - 100 ) AND  \n         ( nfs.nfs_dt_vcto < GETDATE() ) AND\n\t\t\t( mns.mns_mns_serie is null ) AND\n\t\t\t( mns.mns_ind_liberado = 'S' ) AND \n\t\t\t( nfs.nfs_status = 'P' ) AND \n\t\t\t( 8=8 ) AND \n\t\t\tNOT EXISTS ( SELECT mte.mte_serie FROM mte\n\t\t\t\t\t\t\t\tWHERE ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_tipo in ( 'C', 'E', 'O', 'D' ) ) ) \nGROUP BY nfs.nfs_tipo,   \n         nfs.nfs_serie,   \n         nfs.nfs_numero,   \n         nfs.nfs_dt_emis,   \n         nfs.nfs_dt_vcto,   \n         nfs.nfs_valor,   \n         nfs.nfs_vlr_multa,   \n         cnv.cnv_nome,   \n         emp.emp_nome_fantasia,   \n         nfs.nfs_emp_codigo,   \n         nfs.nfs_emp_cod,   \n         nfs.nfs_vlr_iss,   \n         cfg.cfg_emp,   \n         cnv.cnv_ccr_banco,    \n         cfg.cfg_vlrfilme,   \n         nfs.nfs_perc_iss,   \n         nfs.nfs_perc_ir,   \n         nfs.nfs_perc_multa,   \n         nfs.nfs_remessa,   \n         cfg.cfg_tol_ent_diaria,   \n         nfs.nfs_perc_juro,   \n         nfs.nfs_vlr_outros_imp,   \n         MNS.MNS_DT,   \n         MNS.MNS_TIPO, \n\t\t MNS.MNS_NFS_TIPO, \n\t\t mns.mns_mns_serie, \n\t\t mns.mns_mns_num, \n\t\t mns.mns_serie, \n\t\t mns.mns_num, \n\t\t cfg.cfg_vlrfilme, \n\t\t nfs.nfs_nde_tipo, \n\t\t nfs.nfs_vlr_ir, \n\t\t mns.mns_obs,\n\t\t nfs.nfs_ind_tipo_fatura,\n\t\t nfs.nfs_nfl_serie, \n\t\t nfs.nfs_nfl_num,\n\t\t mns.mns_nfl_serie,\n\t\t mns.mns_nfl_num,\n\t\t nfs.nfs_dt_receb,\n\t\t cfg.cfg_vlrfilme,\n\t\t nfs.nfs_dt_envio,\n\t\t nfs.nfs_ns_serie, \n\t\t nfs.nfs_ns_numero, \t\n\t\t cnv.cnv_caixa_fatura,\n         cfg.cfg_cgc,\n\t\t emp.emp_cgc \n\nUNION ALL   \n\n  SELECT top 10 \n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ   \n    FROM cnv,   \n         emp,   \n         nfs,   \n         cfg,   \n         MNS, \n\t\t\tnfs b  \n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod) and  \n\t\t\t( MNS.MNS_NFS_SERIE = b.nfs_serie) and  \n         ( MNS.MNS_NFS_NUMERO = b.nfs_numero) and  \n         ( MNS.MNS_NFS_TIPO = b.nfs_tipo) and  \n         ( nfs.NFS_SERIE = b.nfs_ns_serie ) and  \n         ( nfs.NFS_NUMERO = b.nfs_ns_numero ) and  \n         ( nfs.NFS_TIPO = b.nfs_ns_tipo) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_tipo <> 'NC' ) AND \n\t\t\t--( nfs.nfs_tipo in ( :a_sNfsTipos ) ) AND\n\t\t\t( nfs.nfs_dt_vcto >= GETDATE() - 100 ) AND  \n         ( nfs.nfs_dt_vcto < GETDATE() ) AND\n\t\t\t( mns.mns_mns_serie is null ) AND\n\t\t\t( mns.mns_ind_liberado = 'S' ) AND \n\t\t\t( nfs.nfs_status = 'P' ) AND \n\t\t\t( 8=8 ) AND \t\n\t\t\tNOT EXISTS ( SELECT mte.mte_serie FROM mte\n\t\t\t\t\t\t\t\tWHERE ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_tipo in ( 'C', 'E', 'O', 'D' ) ) )\nGROUP BY nfs.nfs_tipo,   \n         nfs.nfs_serie,   \n         nfs.nfs_numero,   \n         nfs.nfs_dt_emis,   \n         nfs.nfs_dt_vcto,   \n         nfs.nfs_valor,   \n         nfs.nfs_vlr_multa,   \n         cnv.cnv_nome,   \n         emp.emp_nome_fantasia,   \n         nfs.nfs_emp_codigo,   \n         nfs.nfs_emp_cod,   \n         nfs.nfs_vlr_iss,   \n         cfg.cfg_emp,   \n         cnv.cnv_ccr_banco,   \n         nfs.nfs_vlr_ir,   \n         cfg.cfg_vlrfilme,   \n         nfs.nfs_perc_iss,   \n         nfs.nfs_perc_ir,   \n         nfs.nfs_perc_multa,   \n         nfs.nfs_remessa,   \n         cfg.cfg_tol_ent_diaria,   \n         nfs.nfs_perc_juro,   \n         nfs.nfs_vlr_outros_imp,   \n         CASE WHEN mns.mns_tipo = 'NR' THEN b.nfs_dt_vcto ELSE MNS.MNS_DT END,   \n         MNS.MNS_TIPO, \n\t\t MNS.MNS_NFS_TIPO, \n\t\t mns.mns_mns_serie, \n\t\t mns.mns_mns_num, \n\t\t mns.mns_serie, \n\t\t mns.mns_num, \n\t\t b.nfs_nde_tipo, \n\t\t nfs.nfs_vlr_ir, \n\t\t mns.mns_obs, \n\t\t nfs.nfs_ind_tipo_fatura,\n\t\t nfs.nfs_nfl_serie, \n\t\t nfs.nfs_nfl_num, \n\t\t mns.mns_nfl_serie,\n\t\t mns.mns_nfl_num,\n\t\t nfs.nfs_dt_receb,\n\t\t nfs.nfs_dt_envio,\n\t\t nfs.nfs_ns_serie, \n\t\t nfs.nfs_ns_numero, \t\n\t\t cnv.cnv_caixa_fatura,\n         cfg.cfg_cgc,\n\t\t emp.emp_cgc\n\nUNION ALL \n\n  SELECT top 10 \n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ      \n    FROM cnv,   \n         emp,   \n         nfs,   \n         cfg  \n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_dt_vcto >= GETDATE()  - 100) AND  \n         ( nfs.nfs_dt_vcto < GETDATE() ) AND  \n         ( nfs.nfs_tipo <> 'NC' ) AND\n\t\t\t( nfs.nfs_status = 'P' ) AND \n\t\t\t--( nfs.nfs_tipo in ( :a_sNfsTipos ) ) AND \n\t\t\tNOT EXISTS ( SELECT mte.mte_serie FROM mte\n\t\t\t\t\t\t\t\tWHERE ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t\t\t\t\t\t\t\t\t( mte.mte_tipo in ( 'C', 'E', 'O', 'D' ) ) ) AND\n\t\t\tNOT EXISTS ( SELECT MNS.MNS_NUM FROM MNS \n\t\t\t\t\t\t\t\tWHERE ( mns.mns_ind_liberado = 'S' ) AND \n\t\t\t\t\t\t\t\t\t\t( 8=8 ) AND \n\t\t\t\t\t\t\t\t\t\t( MNS.MNS_NFS_SERIE = nfs.nfs_serie) and  \n\t\t\t\t\t\t\t         ( MNS.MNS_NFS_NUMERO = nfs.nfs_numero) and  \n\t\t\t\t\t\t\t         ( MNS.MNS_NFS_TIPO = nfs.nfs_tipo) ) \n -------------- OK  2\nUNION ALL \n\n  SELECT top 10 \n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ   \n     FROM cnv,   \n         emp,   \n         nfs,   \n         cfg,   \n         MNS,\n\t\t\tmte, \n\t\t\trdi,\n\t\t\tpac   \n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod ) and  \n         ( MNS.MNS_NFS_SERIE = nfs.nfs_serie) and  \n         ( MNS.MNS_NFS_NUMERO = nfs.nfs_numero) and  \n         ( MNS.MNS_NFS_TIPO = nfs.nfs_tipo) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_tipo = 'NC' ) AND \n\t\t\t--( nfs.nfs_tipo in ( :a_sNfsTipos ) ) AND\n\t\t ( rdi.rdi_vcto >= GETDATE() - 100 ) AND  \n         ( rdi.rdi_vcto < GETDATE() ) AND\n\t\t ( rdi.rdi_forma_pag <> 'U' ) AND \n\t\t ( rdi.rdi_recepcao <> 'S' ) AND \n\t\t ( mns.mns_mns_serie is null ) AND\n\t\t ( mns.mns_ind_liberado = 'S' ) AND \n\t\t ( nfs.nfs_status = 'P' ) AND \n\t\t ( mte.mte_pac_reg = pac.pac_reg ) AND \n\t\t ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t ( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t ( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t ( mte.mte_status = 'D' ) AND \n\t\t ( mte.mte_tipo not in ( 'E', 'D' ) ) AND\n\t\t ( 8=8 ) AND \n\t\t ( mte.mte_serie = rdi.rdi_mte_serie ) AND\n\t\t ( mte.mte_seq = rdi.rdi_mte_seq ) AND\n\t\t ( rdi.rdi_mns_serie = mns.mns_serie ) AND\n\t\t ( rdi.rdi_mns_num = mns.mns_num ) AND \n\t\t ( rdi.rdi_mcc_serie_dep is not null ) AND \n\t\t ( ( mte.mte_tipo <> 'C' ) OR\n\t\t\t  ( EXISTS ( SELECT tca_cod FROM tca\n\t\t\t\t\t\t\t\tWHERE ( tca.tca_cod = mte.mte_tca_cod ) AND\n\t\t\t\t\t\t\t\t\t\t( tca.tca_ind_cr = 'S' ) ) ) OR \n\t\t\t  ( EXISTS ( SELECT udp_valor FROM udp \n\t\t\t\t\t\t\t\tWHERE ( udp.udp_mte_serie_dep = mte.mte_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( udp.udp_mte_seq_dep = mte.mte_seq ) ) ) ) \n\n---- OK 3\n\nUNION ALL \n\n  SELECT  top 10 \n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ   \n     FROM cnv,   \n         emp,   \n         nfs,   \n         cfg,   \n\t\t\tmte, \n\t\t\trdi,\n\t\t\tpac   \n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod ) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_tipo = 'NC' ) AND \n\t\t ( rdi.rdi_vcto >= GETDATE() - 100 ) AND  \n         ( rdi.rdi_vcto < GETDATE() ) AND\n\t\t ( rdi.rdi_forma_pag <> 'U' ) AND \n\t\t ( rdi.rdi_recepcao <> 'S' ) AND \n\t\t ( nfs.nfs_status = 'P' ) AND \n\t\t ( mte.mte_pac_reg = pac.pac_reg ) AND \n\t\t ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t ( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t ( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t ( mte.mte_status = 'D' ) AND \n\t\t ( mte.mte_tipo not in ( 'E', 'D' ) ) AND\n\t\t ( mte.mte_serie = rdi.rdi_mte_serie ) AND\n\t\t ( mte.mte_seq = rdi.rdi_mte_seq ) AND\n\t\t ( ( mte.mte_tipo <> 'C' ) OR\n\t\t\t  ( EXISTS ( SELECT tca_cod FROM tca\n\t\t\t\t\t\t\t\tWHERE ( tca.tca_cod = mte.mte_tca_cod ) AND\n\t\t\t\t\t\t\t\t\t\t( tca.tca_ind_cr = 'S' ) ) ) OR \n\t\t\t  ( EXISTS ( SELECT udp_valor FROM udp \n\t\t\t\t\t\t\t\tWHERE ( udp.udp_mte_serie_dep = mte.mte_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( udp.udp_mte_seq_dep = mte.mte_seq ) ) ) ) AND \n\t\t\t( ( rdi.rdi_mcc_serie_dep is null ) OR \n\t\t\t  ( rdi.rdi_forma_pag = 'X' ) OR \n\t\t\t  ( rdi.rdi_seq_subst is null AND \n\t\t\t\t NOT EXISTS ( SELECT mns.mns_serie FROM mns\n\t\t\t\t\t\t\t\t\tWHERE ( rdi.rdi_mns_serie = mns.mns_serie ) AND\n\t\t\t\t\t\t\t\t\t\t\t( rdi.rdi_mns_num = mns.mns_num ) AND\n\t\t\t\t\t\t\t\t\t\t\t( mns.mns_ind_liberado = 'S' ) ) ) ) \n ------- OK 4\nUNION ALL \n\n  SELECT  top 10 \n        nfs.nfs_tipo as NR_TIPO_TITULO, \n        nfs.nfs_serie as NR_SERIE_TITULO,   \n        nfs.nfs_numero as NR_TITULO,   \n        nfs.nfs_dt_emis as DT_EMISSAO_TITULO,   \n        nfs.nfs_dt_vcto as DT_VENCIMENTO_TITULO,   \n        nfs.nfs_valor as VL_TITULO,   \n        nfs.nfs_vlr_multa as VL_MULTA,   \n        cnv.cnv_nome as DS_CONVENIO,   \n        emp.emp_nome_fantasia as DS_EMPRESA_CONVENIO,   \n\t\temp.emp_cgc AS CONV_CNPJ, \n        nfs.nfs_vlr_iss as VL_ISS,   \n        nfs.nfs_vlr_ir as VL_IR,   \n        cfg.cfg_vlrfilme as VL_FILME,   \n        nfs.nfs_perc_iss as VL_PERC_ISS,   \n        nfs.nfs_perc_ir as VL_PER_IR,   \n        nfs.nfs_perc_multa as VL_PERC_MULTA,   \n        nfs.nfs_perc_juro as VL_PERC_JURO,   \n        nfs.nfs_vlr_outros_imp as VL_OUTROS_IMP,\n\t\tnfs.nfs_remessa as NR_REMESSA,\n\t\tcfg.cfg_emp as MARCA,\n\t\tcfg.cfg_emp as SIGLA_UNIDADE,\n        cfg.cfg_cgc as CNPJ   \n     FROM cnv,   \n         emp,   \n         nfs,   \n         cfg,   \n         MNS,\n\t\t\tmte, \n\t\t\trdi,\n\t\t\tpac, \n\t\t\trdi b   \n   WHERE ( emp.emp_cod = nfs.nfs_emp_cod ) and  \n         ( MNS.MNS_NFS_SERIE = nfs.nfs_serie) and  \n         ( MNS.MNS_NFS_NUMERO = nfs.nfs_numero) and  \n         ( MNS.MNS_NFS_TIPO = nfs.nfs_tipo) and  \n         ( cnv.cnv_cod = nfs.nfs_emp_codigo ) and  \n         ( nfs.nfs_tipo = 'NC' ) AND \n\t\t ( rdi.rdi_vcto >= GETDATE()-100 ) AND  \n         ( rdi.rdi_vcto < GETDATE() ) AND\n\t\t ( rdi.rdi_forma_pag <> 'U' ) AND \n\t\t ( rdi.rdi_recepcao <> 'S' ) AND \n\t\t ( mns.mns_mns_serie is null ) AND\n\t\t ( mns.mns_ind_liberado = 'S' ) AND \n\t\t ( nfs.nfs_status = 'P' ) AND \n\t\t ( mte.mte_pac_reg = pac.pac_reg ) AND \n\t\t ( mte.mte_nfs_tipo = nfs.nfs_tipo ) AND\n\t\t ( mte.mte_nfs_serie = nfs.nfs_serie ) AND\n\t\t ( mte.mte_nfs_numero = nfs.nfs_numero ) AND\n\t\t ( mte.mte_status = 'D' ) AND \n\t\t ( mte.mte_tipo not in ( 'E', 'D' ) ) AND\n\t\t ( 8=8 ) AND \n\t\t ( mte.mte_serie = rdi.rdi_mte_serie ) AND\n\t\t ( mte.mte_seq = rdi.rdi_mte_seq ) AND\n\t\t ( b.rdi_mte_serie = rdi.rdi_mte_serie ) AND\n\t\t ( b.rdi_mte_seq = rdi.rdi_mte_seq ) AND\n\t\t ( b.rdi_seq = rdi.rdi_seq_subst ) AND \n\t\t ( b.rdi_mns_serie = mns.mns_serie ) AND\n\t\t ( b.rdi_mns_num = mns.mns_num ) AND \n\t\t ( rdi.rdi_mcc_serie_dep is not null ) AND \n\t\t ( ( mte.mte_tipo <> 'C' ) OR\n\t\t   ( EXISTS ( SELECT tca_cod FROM tca\n\t\t \t\t\t\t\tWHERE ( tca.tca_cod = mte.mte_tca_cod ) AND\n\t\t\t\t\t\t\t\t\t\t( tca.tca_ind_cr = 'S' ) ) ) OR \n\t\t\t  ( EXISTS ( SELECT udp_valor FROM udp \n\t\t\t\t\t\t\t\tWHERE ( udp.udp_mte_serie_dep = mte.mte_serie ) AND\n\t\t\t\t\t\t\t\t\t\t( udp.udp_mte_seq_dep = mte.mte_seq ) ) ) )",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Titulos_Receber",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Contas a receber"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SMART_HOSL_PrdDataSet')]"
			]
		}
	]
}