{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Itabuna')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Pacientes Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select top 100 pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \nPAC_CELULAR AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'13188370000146' AS CNPJ,\n'Dayhorc ITB' as SIGLA_UNIDADE,\n'DH' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Atendimento Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT top 100 pac_reg AS CD_PESSOA_FISICA\n    , rtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA\n    , convert(CHAR(10), osm_dthr, 121) AS DT_ENTRADA\n    , LEFT(CONVERT(VARCHAR(12), osm_dthr, 114),8) AS HR_ENTRADA\n    , smm_med AS NM_MEDICO\n    , osm_cnv AS CD_CONVENIO\n    , cnv_nome AS DS_CONVENIO\n    , convert(INT, (convert(VARCHAR, osm_serie) + convert(VARCHAR, osm_num))) AS NR_ATENDIMENTO\n    , emp_cgc AS CNPJ\n    , emp_nome_fantasia AS SIGLA_UNIDADE\n    , emp_nome_fantasia AS MARCA\n    , 0 AS CD_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS DS_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS ID\n    , CONVERT(INT, DAY(osm_dthr)) AS DIA\n    , CONVERT(INT, MONTH(osm_dthr)) AS MES\n    , CONVERT(INT, YEAR(osm_dthr)) AS ANO\nFROM osm\nINNER JOIN smm\n    ON smm_osm_serie = osm_serie\n        AND smm_osm = osm_num\nINNER JOIN pac\n    ON pac_reg = osm_pac\nINNER JOIN cnv\n    ON osm_cnv = cnv_cod\nINNER JOIN str\n    ON str_cod = osm_str\nINNER JOIN psv\n    ON psv_cod = osm_mreq\nLEFT OUTER JOIN str str_e\n    ON str.str_str_cod = str_e.str_cod\nLEFT OUTER JOIN emp\n    ON str_e.str_emp_cod = emp_cod",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HR_ENTRADA",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "HR_ENTRADA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "NM_MEDICO",
											"type": "String"
										},
										"sink": {
											"name": "NM_MEDICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CNPJ",
											"type": "String"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										},
										"sink": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDENCIA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PROCEDENCIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDENCIA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DIA",
											"type": "Int32"
										},
										"sink": {
											"name": "DIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MES",
											"type": "Int32"
										},
										"sink": {
											"name": "MES",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ANO",
											"type": "Int32"
										},
										"sink": {
											"name": "ANO",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT top 100 AGM_PAC AS CD_PESSOA_FISICA\n    , agm.agm_cnv_cod AS CD_CONVENIO\n    , emp_cgc AS CNPJ\n    , CONVERT(DATE, AGM_HINI) AS DATA_AGENDA\n    , LEFT(CONVERT(VARCHAR(12), agm_hini, 114), 8) AS HORA_AGENDA\n    , CASE AGM_ATEND\n        WHEN 'CRG'\n            THEN 'Cirurgia'\n        WHEN 'ASS'\n            THEN 'Consulta'\n        when '' then 'Consulta'\n        ELSE 'Outros'\n        END AS TIPO_AGENDA\n    , pac.PAC_NOME AS NM_PACIENTE\n    , smk.smk_nome AS DS_PROCEDIMENTO_PRINC\n    , ' ' DS_PROCEDIMENTO_ADIC\n    , 1 AS IE_QUANTIDADE\n    , USR_NOME AS NM_USUARIO\n    , psv_nome AS NM_MEDICO\n    , EMP_NOME_FANTASIA AS SIGLA_UNIDADE\n    , EMP_NOME_FANTASIA AS MARCA\n    , CASE \n        WHEN AGM_STAT = 'A'\n            THEN 'Aberta'\n        WHEN AGM_STAT = 'E'\n            THEN 'Executada'\n        WHEN AGM_STAT = 'C'\n            THEN 'Cancelada'\n        WHEN AGM_STAT = 'B'\n            THEN 'Bloqueada'\n        END STATUS_AGENDA\n    , CONVERT(INT, convert(VARCHAR, AGM_OSM_SERIE) + convert(VARCHAR, AGM_OSM_NUM)) AS NR_ATENDIMENTO\n    , AGM_num AS NR_SEQUENCIA\n    , '' ID\n    , '' AS CD_PROCEDENCIA\n    , agm_proc AS DS_PROCEDENCIA\n    , agm.AGM_DTMRC AS DT_AGENDAMENTO\n    , CONVERT(INT, DAY(AGM_HINI)) AS DIA\n    , CONVERT(INT, MONTH(AGM_HINI)) AS MES\n    , CONVERT(INT, YEAR(AGM_HINI)) AS ANO\n    , ' ' DS_CLASSIFICACAO\n    , ' ' DS_AGRUPAMENTO\n    , agm.AGM_CANC_MOT_COD AS CD_MOTIVO_CANCELAMENTO\n    , agm.AGM_CANC_MOT_TIPO AS DS_MOTIVO_CANCELAMENTO\n    , agm_med AS CD_AGENDA\nFROM agm\nINNER JOIN usr\n    ON (agm.agm_usr_login = usr.usr_login)\nINNER JOIN psv\n    ON (psv.psv_cod = agm.agm_med)\nINNER JOIN smk\n    ON (\n            agm_smk = smk_cod\n            AND agm_tpsmk = smk_tipo\n            )\nINNER JOIN pac\n    ON (pac_reg = agm_pac)\nINNER JOIN loc\n    ON (AGM_LOC = LOC_COD)\nINNER JOIN str\n    ON (LOC_STR = STR.STR_COD)\nINNER JOIN str str_e\n    ON (STR.STR_STR_COD = STR_E.STR_COD)\nINNER JOIN cnv\n    ON (CNV_COD = AGM_CNV_COD)\nLEFT OUTER JOIN ctf ct1\n    ON (\n            ct1.ctf_cod = smk_ctf\n            AND ct1.ctf_tipo = smk_tipo\n            )\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Usuarios Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select top 100\nusr_login as NM_USUARIO,\nusr_nome as DS_USUARIO,\nusr_status as IE_SITUACAO,\nusr_dt_alter_senha as DT_ATUALIZACAO,\n'Dayhorc ITB' AS SIGLA_UNIDADE,\n'13188370000146' as CNPJ,\n'DH' as MARCA\nfrom usr",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT top 100\nRCL_SMM AS NR_SEQUENCIA,\nCONVERT(DATE,RCL_DTHR_ATUAL) AS DT_ATUALIZACAO,\nCONVERT(VARCHAR,RCL_DTHR_ATUAL,108) as HR_ATUALIZACAO,\n\nCONVERT(INT,CONVERT(VARCHAR,RCL_OSM_SERIE) + CONVERT(VARCHAR,RCL_OSM)) AS NR_ATENDIMENTO, \n\nRCL_MED AS CD_MEDICO,\nPSV_APEL AS NM_MEDICO,\n'' AS DS_RETORNO,\nCONVERT(VARCHAR,RCL_LAUDO_RTF) AS DS_CONDUTA,\nRCL_PAC AS CD_PESSOA_FISICA,\nCONVERT(VARCHAR,RCL_TXT) AS DS_DIAGNOSTICO,\n'Dayhorc ITB' AS SIGLA_UNIDADE,\n'13188370000146' as CNPJ,\n'DH' AS MARCA\nFROM RCL\nINNER JOIN PSV ON PSV_COD = RCL_MED",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT distinct top 100 agd_med AS CD_AGENDA \n    , 0 AS DS_AGENDA\n    , 0 CD_TIPO_AGENDA\n    , psv_cod AS CD_PESSOA_FISICA\n    , emp_cgc AS CNPJ\n    , '' AS DS_AREA_ATUACAO\n    , 'A' AS IE_SITUACAO\n    -- , CASE \n    --     WHEN (agd_dt_reconstr IS not NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_reconstr\n    --     WHEN (agd_dt_reconstr IS NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_gera\n    --     ELSE AGD_DT_GERA\n    --     END AS DT_ATUALIZACAO\nFROM agd\nINNER JOIN PSV\n    ON agd_med = psv_cod\nINNER JOIN loc\n    ON loc_cod = agd_loc\nINNER JOIN str\n    ON str_cod = loc_str\nLEFT OUTER JOIN str str_e\n    ON str_e.str_cod = str.str_str_cod\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_AGENDA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_AGENDA",
											"type": "String"
										},
										"sink": {
											"name": "DS_AGENDA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TIPO_AGENDA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TIPO_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CNPJ",
											"type": "String"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_AREA_ATUACAO",
											"type": "String"
										},
										"sink": {
											"name": "DS_AREA_ATUACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SITUACAO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SITUACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										},
										"sink": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Oftalmoclin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Pacientes Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select top 100 pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \nPAC_CELULAR AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'14307763000194' AS CNPJ,\n'OFTALMOCLIN Hospital de Olhos da Bahia' as SIGLA_UNIDADE,\n'OFTALMOCLIN' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Atendimento Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT top 100 pac_reg AS CD_PESSOA_FISICA\n    , rtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA\n    , convert(CHAR(10), osm_dthr, 121) AS DT_ENTRADA\n    , LEFT(CONVERT(VARCHAR(12), osm_dthr, 114),8) AS HR_ENTRADA\n    , smm_med AS NM_MEDICO\n    , osm_cnv AS CD_CONVENIO\n    , cnv_nome AS DS_CONVENIO\n    , convert(INT, (convert(VARCHAR, osm_serie) + convert(VARCHAR, osm_num))) AS NR_ATENDIMENTO\n    , '14307763000194' AS CNPJ\n    , 'OFTALMOCLIN Hospital de Olhos da Bahia' AS SIGLA_UNIDADE\n    , 'OFTALMOCLIN' AS MARCA\n    , 0 AS CD_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS DS_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS ID\n    , CONVERT(INT, DAY(osm_dthr)) AS DIA\n    , CONVERT(INT, MONTH(osm_dthr)) AS MES\n    , CONVERT(INT, YEAR(osm_dthr)) AS ANO\nFROM osm\nINNER JOIN smm\n    ON smm_osm_serie = osm_serie\n        AND smm_osm = osm_num\nINNER JOIN pac\n    ON pac_reg = osm_pac\nINNER JOIN cnv\n    ON osm_cnv = cnv_cod\nINNER JOIN str\n    ON str_cod = osm_str\nINNER JOIN psv\n    ON psv_cod = osm_mreq\nLEFT OUTER JOIN str str_e\n    ON str.str_str_cod = str_e.str_cod\nLEFT OUTER JOIN emp\n    ON str_e.str_emp_cod = emp_cod\nWHERE 1 = 1\n    AND (\n        smm_pacote IS NULL\n        OR (smm_pacote = 'C')\n        )\n    AND smm_sfat NOT IN ('C')\n\n----- Agendamentos -----\n\nSELECT DISTINCT top 100 AGM_PAC AS CD_PESSOA_FISICA\n    , agm.agm_cnv_cod AS CD_CONVENIO\n    , emp_cgc AS CNPJ\n    , CONVERT(DATE, AGM_HINI) AS DATA_AGENDA\n    , LEFT(CONVERT(VARCHAR(12), agm_hini, 114), 8) AS HORA_AGENDA\n    , CASE AGM_ATEND\n        WHEN 'CRG'\n            THEN 'Cirurgia'\n        WHEN 'ASS'\n            THEN 'Consulta'\n        when '' then 'Consulta'\n        ELSE 'Outros'\n        END AS TIPO_AGENDA\n    , pac.PAC_NOME AS NM_PACIENTE\n    , smk.smk_nome AS DS_PROCEDIMENTO_PRINC\n    , ' ' DS_PROCEDIMENTO_ADIC\n    , 1 AS IE_QUANTIDADE\n    , USR_NOME AS NM_USUARIO\n    , psv_nome AS NM_MEDICO\n    , EMP_NOME_FANTASIA AS SIGLA_UNIDADE\n    , EMP_NOME_FANTASIA AS MARCA\n    , CASE \n        WHEN AGM_STAT = 'A'\n            THEN 'Aberta'\n        WHEN AGM_STAT = 'E'\n            THEN 'Executada'\n        WHEN AGM_STAT = 'C'\n            THEN 'Cancelada'\n        WHEN AGM_STAT = 'B'\n            THEN 'Bloqueada'\n        END STATUS_AGENDA\n    , CONVERT(INT, convert(VARCHAR, AGM_OSM_SERIE) + convert(VARCHAR, AGM_OSM_NUM)) AS NR_ATENDIMENTO\n    , AGM_num AS NR_SEQUENCIA\n    , '' ID\n    , '' AS CD_PROCEDENCIA\n    , agm_proc AS DS_PROCEDENCIA\n    , agm.AGM_DTMRC AS DT_AGENDAMENTO\n    , CONVERT(INT, DAY(AGM_HINI)) AS DIA\n    , CONVERT(INT, MONTH(AGM_HINI)) AS MES\n    , CONVERT(INT, YEAR(AGM_HINI)) AS ANO\n    , ' ' DS_CLASSIFICACAO\n    , ' ' DS_AGRUPAMENTO\n    , agm.AGM_CANC_MOT_COD AS CD_MOTIVO_CANCELAMENTO\n    , agm.AGM_CANC_MOT_TIPO AS DS_MOTIVO_CANCELAMENTO\n    , agm_med AS CD_AGENDA\nFROM agm\nINNER JOIN usr\n    ON (agm.agm_usr_login = usr.usr_login)\nINNER JOIN psv\n    ON (psv.psv_cod = agm.agm_med)\nINNER JOIN smk\n    ON (\n            agm_smk = smk_cod\n            AND agm_tpsmk = smk_tipo\n            )\nINNER JOIN pac\n    ON (pac_reg = agm_pac)\nINNER JOIN loc\n    ON (AGM_LOC = LOC_COD)\nINNER JOIN str\n    ON (LOC_STR = STR.STR_COD)\nINNER JOIN str str_e\n    ON (STR.STR_STR_COD = STR_E.STR_COD)\nINNER JOIN cnv\n    ON (CNV_COD = AGM_CNV_COD)\nLEFT OUTER JOIN ctf ct1\n    ON (\n            ct1.ctf_cod = smk_ctf\n            AND ct1.ctf_tipo = smk_tipo\n            )\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HR_ENTRADA",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "HR_ENTRADA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "NM_MEDICO",
											"type": "String"
										},
										"sink": {
											"name": "NM_MEDICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CNPJ",
											"type": "String"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										},
										"sink": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDENCIA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PROCEDENCIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDENCIA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DIA",
											"type": "Int32"
										},
										"sink": {
											"name": "DIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MES",
											"type": "Int32"
										},
										"sink": {
											"name": "MES",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ANO",
											"type": "Int32"
										},
										"sink": {
											"name": "ANO",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT top 100 AGM_PAC AS CD_PESSOA_FISICA\n    , agm.agm_cnv_cod AS CD_CONVENIO\n    , emp_cgc AS CNPJ\n    , CONVERT(DATE, AGM_HINI) AS DATA_AGENDA\n    , LEFT(CONVERT(VARCHAR(12), agm_hini, 114), 8) AS HORA_AGENDA\n    , CASE AGM_ATEND\n        WHEN 'CRG'\n            THEN 'Cirurgia'\n        WHEN 'ASS'\n            THEN 'Consulta'\n        when '' then 'Consulta'\n        ELSE 'Outros'\n        END AS TIPO_AGENDA\n    , pac.PAC_NOME AS NM_PACIENTE\n    , smk.smk_nome AS DS_PROCEDIMENTO_PRINC\n    , ' ' DS_PROCEDIMENTO_ADIC\n    , 1 AS IE_QUANTIDADE\n    , USR_NOME AS NM_USUARIO\n    , psv_nome AS NM_MEDICO\n    , EMP_NOME_FANTASIA AS SIGLA_UNIDADE\n    , EMP_NOME_FANTASIA AS MARCA\n    , CASE \n        WHEN AGM_STAT = 'A'\n            THEN 'Aberta'\n        WHEN AGM_STAT = 'E'\n            THEN 'Executada'\n        WHEN AGM_STAT = 'C'\n            THEN 'Cancelada'\n        WHEN AGM_STAT = 'B'\n            THEN 'Bloqueada'\n        END STATUS_AGENDA\n    , CONVERT(INT, convert(VARCHAR, AGM_OSM_SERIE) + convert(VARCHAR, AGM_OSM_NUM)) AS NR_ATENDIMENTO\n    , AGM_num AS NR_SEQUENCIA\n    , '' ID\n    , '' AS CD_PROCEDENCIA\n    , agm_proc AS DS_PROCEDENCIA\n    , agm.AGM_DTMRC AS DT_AGENDAMENTO\n    , CONVERT(INT, DAY(AGM_HINI)) AS DIA\n    , CONVERT(INT, MONTH(AGM_HINI)) AS MES\n    , CONVERT(INT, YEAR(AGM_HINI)) AS ANO\n    , ' ' DS_CLASSIFICACAO\n    , ' ' DS_AGRUPAMENTO\n    , agm.AGM_CANC_MOT_COD AS CD_MOTIVO_CANCELAMENTO\n    , agm.AGM_CANC_MOT_TIPO AS DS_MOTIVO_CANCELAMENTO\n    , agm_med AS CD_AGENDA\nFROM agm\nINNER JOIN usr\n    ON (agm.agm_usr_login = usr.usr_login)\nINNER JOIN psv\n    ON (psv.psv_cod = agm.agm_med)\nINNER JOIN smk\n    ON (\n            agm_smk = smk_cod\n            AND agm_tpsmk = smk_tipo\n            )\nINNER JOIN pac\n    ON (pac_reg = agm_pac)\nINNER JOIN loc\n    ON (AGM_LOC = LOC_COD)\nINNER JOIN str\n    ON (LOC_STR = STR.STR_COD)\nINNER JOIN str str_e\n    ON (STR.STR_STR_COD = STR_E.STR_COD)\nINNER JOIN cnv\n    ON (CNV_COD = AGM_CNV_COD)\nLEFT OUTER JOIN ctf ct1\n    ON (\n            ct1.ctf_cod = smk_ctf\n            AND ct1.ctf_tipo = smk_tipo\n            )\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Usuarios Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select top 100\nusr_login as NM_USUARIO,\nusr_nome as DS_USUARIO,\nusr_status as IE_SITUACAO,\nusr_dt_alter_senha as DT_ATUALIZACAO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS SIGLA_UNIDADE,\n'14307763000194' as CNPJ,\n'OFTALMOCLIN' as MARCA\nfrom usr",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT top 100\nRCL_SMM AS NR_SEQUENCIA,\nCONVERT(DATE,RCL_DTHR_ATUAL) AS DT_ATUALIZACAO,\nCONVERT(VARCHAR,RCL_DTHR_ATUAL,108) as HR_ATUALIZACAO,\n\nCONVERT(INT,CONVERT(VARCHAR,RCL_OSM_SERIE) + CONVERT(VARCHAR,RCL_OSM)) AS NR_ATENDIMENTO, \n\nRCL_MED AS CD_MEDICO,\nPSV_APEL AS NM_MEDICO,\n'' AS DS_RETORNO,\nCONVERT(VARCHAR,RCL_LAUDO_RTF) AS DS_CONDUTA,\nRCL_PAC AS CD_PESSOA_FISICA,\nCONVERT(VARCHAR,RCL_TXT) AS DS_DIAGNOSTICO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS SIGLA_UNIDADE,\n'14307763000194' as CNPJ,\n'IOF' AS MARCA\nFROM RCL\nINNER JOIN PSV ON PSV_COD = RCL_MED",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT top 100\nRCL_SMM AS NR_SEQUENCIA,\nCONVERT(DATE,RCL_DTHR_ATUAL) AS DT_ATUALIZACAO,\nCONVERT(VARCHAR,RCL_DTHR_ATUAL,108) as HR_ATUALIZACAO,\n\nCONVERT(INT,CONVERT(VARCHAR,RCL_OSM_SERIE) + CONVERT(VARCHAR,RCL_OSM)) AS NR_ATENDIMENTO, \n\nRCL_MED AS CD_MEDICO,\nPSV_APEL AS NM_MEDICO,\n'' AS DS_RETORNO,\nCONVERT(VARCHAR,RCL_LAUDO_RTF) AS DS_CONDUTA,\nRCL_PAC AS CD_PESSOA_FISICA,\nCONVERT(VARCHAR,RCL_TXT) AS DS_DIAGNOSTICO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS SIGLA_UNIDADE,\n'14307763000194' as CNPJ,\n'IOF' AS MARCA\nFROM RCL\nINNER JOIN PSV ON PSV_COD = RCL_MED",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_AGENDA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_AGENDA",
											"type": "String"
										},
										"sink": {
											"name": "DS_AGENDA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TIPO_AGENDA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TIPO_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CNPJ",
											"type": "String"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_AREA_ATUACAO",
											"type": "String"
										},
										"sink": {
											"name": "DS_AREA_ATUACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SITUACAO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SITUACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										},
										"sink": {
											"name": "SIGLA_UNIDADE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Paciente Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       pf.nr_ddd_celular||''||substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'DDT')||''||obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       e.nm_fantasia_estab as DS_UNIDADE,\n       em.nm_razao_social as MARCA,\n       pf.nr_prontuario,\n       pf.dt_cadastro_original ,\n       pf.dt_atualizacao\nfrom pessoa_fisica pf,\n     estabelecimento e,\n     empresa em\nwhere decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento) = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'dd/mm/yyyy') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nat.dt_cancelamento,\nat.dt_atualizacao\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p,\nestabelecimento e,\nempresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'dd/mm/yyyy') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nobter_nome_estab(obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'SADALLA' as marca \n\nfrom oft_consulta_medica o,\n     oft_retorno r,\n     estabelecimento e\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null\nand obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\na.dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\n\na.dt_atualizacao\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa,\n     estabelecimento e,\n     empresa em\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear_Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nu.dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca\nfrom usuario u,\n     empresa em,\n     estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear_Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Agendas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nA.DT_ATUALIZACAO\nFROM AGENDA A,\n     ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Dia NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Dia CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Bilhetes NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Bilhete de ligacoes CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes CSI SADALLA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOBL2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Filas por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Filas por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_FilasporHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cria Base Nexcore",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Filas por Hora CSI",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora DH",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora INOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATEBASENEXCORE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline Principal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sadalla_Tasy_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\n\n'Tasy Sadalla' as BASE,\n--x.nr_seq_proc_pacote,\n7 as cd_marca,\n'Hospital de Olhos Sadalla Amin Ghanem' as marca,\n17 as cd_estabelecimento,\nc.nr_atendimento,\n'7'||'17'||c.nr_atendimento as nr_registro_unico,\nx.dt_atualizacao,\nat.dt_entrada,\nc.nr_interno_conta,\nnull as ds_estabelecimento,\npf.cd_pessoa_fisica,\n\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\n--pf.cd_pessoa_fisica as cd_pessoa_fisica,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\nc.cd_convenio_parametro as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nx.cd_medico_executor,\nobter_nome_pf(x.cd_medico_executor) as ds_medico_executor,\nx.cd_medico_req as cd_medico_requisitante,\nobter_nome_pf(x.cd_medico_req) as ds_medico_requisitante,\nx.ie_origem_proced,\nx.cd_procedimento,\nx.ds_procedimento as ds_procedimento,\nx.classif as ds_classificacao,\n\n(select r.ds_grupo_receita from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) as ds_classif_procedimento,\n\ncase\nwhen (select r.nr_sequencia from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) = 12 then x.cd_procedimento\nelse\n\n(select z.cd_procedimento as valor \n from procedimento_paciente z \n where z.nr_atendimento = c.nr_atendimento \n and z.nr_interno_conta = c.nr_interno_conta \n --and z.vl_medico = (select max(w.vl_medico) \n and z.nr_sequencia = (select min(w.nr_sequencia)\n                          from procedimento_paciente w \n                          where w.nr_atendimento = z.nr_atendimento \n                          and w.nr_interno_conta = z.nr_interno_conta\n                          and w.cd_motivo_exc_conta is null\n                          ) \n group by z.cd_procedimento) end cd_proced_principal,\n\ncase\nwhen (select r.nr_sequencia from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) = 12 then obter_desc_procedimento(x.cd_procedimento, x.ie_origem_proced)\nelse\n\nobter_desc_procedimento(\n\n(select z.cd_procedimento as valor \n   from procedimento_paciente z \n   where z.nr_atendimento = c.nr_atendimento \n   and z.nr_interno_conta = c.nr_interno_conta \n   --and z.vl_medico = (select max(w.vl_medico) \n    and z.nr_sequencia = (select min(w.nr_sequencia)\n                            from procedimento_paciente w \n                            where w.nr_atendimento = z.nr_atendimento \n                            and w.nr_interno_conta = z.nr_interno_conta\n                            and w.cd_motivo_exc_conta is null\n                            ) \n                            group by z.cd_procedimento),\n\n(select min(z.ie_origem_proced) as ie_origem_proced \n   from procedimento_paciente z \n   where z.nr_atendimento = c.nr_atendimento \n   and z.nr_interno_conta = c.nr_interno_conta \n   --and z.vl_medico = (select max(w.vl_medico) \n    and z.nr_sequencia = (select min(w.nr_sequencia)\n                         from procedimento_paciente w \n                         where w.nr_atendimento = z.nr_atendimento \n                         and w.nr_interno_conta = z.nr_interno_conta\n                         and w.cd_motivo_exc_conta is null\n                         ) \n group by z.ie_origem_proced)\n\n)end ds_proced_principal,\n\nx.qt_procedimento,\nc.vl_conta,\nx.vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\nx.tuss as cd_tuss,\n(select x.ds_estrutura from  mat_estrutura x, mat_estrutura_cadastro y where x.nr_sequencia = y.nr_seq_estrutura and y.cd_material = x.cd_procedimento) as ds_classif_lio\nfrom atendimento_paciente at,\nconta_paciente c,\npessoa_fisica pf,\n\n(select p.nr_interno_conta, \np.cd_procedimento, \nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) as ds_procedimento, \nobter_valor_dominio(19,pr.ie_classificacao) as classif,\np.cd_medico_executor,\np.cd_medico_req,\np.ie_origem_proced,\np.qt_procedimento,\np.vl_procedimento,\np.vl_medico,\np.nr_sequencia,\np.cd_edicao_amb,\np.cd_convenio,\np.nr_atendimento,\np.cd_motivo_exc_conta,\np.nr_seq_proc_crit_repasse,\nobter_codigo_tuss(p.nr_seq_proc_interno) as tuss,\np.dt_atualizacao,\npr.nr_seq_grupo_rec\nfrom procedimento_paciente p,\n     procedimento pr\nwhere p.cd_procedimento = pr.cd_procedimento\nand p.ie_origem_proced = pr.ie_origem_proced\n\nunion all\nselect mp.nr_interno_conta, \nmp.cd_material as cd_procedimento, \nm.ds_material as ds_procedimento,\nobter_dados_material(m.cd_material,'GRU') as classif,\nobter_medico_resp_atend(mp.nr_atendimento,'C') as cd_medico_executor,\nobter_medico_resp_atend(mp.nr_atendimento,'C') as cd_medico_req,\n0 as ie_origem_proced,\nmp.qt_material,\nmp.vl_material,\n0 vl_medico,\nmp.nr_sequencia,\n'0' as cd_edicao_amb,\nmp.cd_convenio,\nmp.nr_atendimento,\nmp.cd_motivo_exc_conta,\n0 nr_seq_proc_crit_repasse,\n0 tuss,\nmp.dt_atualizacao,\n0 nr_seq_grupo_rec\nfrom material_atend_paciente mp,\n     material m\nwhere mp.cd_material = m.cd_material) x\n\nwhere at.nr_atendimento = c.nr_atendimento\nand c.nr_interno_conta = x.nr_interno_conta\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand c.ie_cancelamento is null\nand x.cd_motivo_exc_conta is null\nand c.cd_estabelecimento = 1\nand at.dt_entrada BETWEEN sysdate -2 and sysdate\nand c.vl_conta > 0\ngroup by \nc.nr_atendimento,\nat.dt_entrada,\nc.nr_interno_conta,\nc.cd_estabelecimento,\nat.cd_pessoa_fisica,\nc.cd_convenio_parametro,\nc.vl_conta,\nx.nr_sequencia,\nx.vl_medico,\nx.vl_procedimento,\nx.ie_origem_proced,\nx.cd_procedimento,\nx.ds_procedimento,\nx.qt_procedimento,\nx.cd_edicao_amb,\nx.cd_medico_executor,\nc.ie_status_acerto,\nx.nr_atendimento,\nx.cd_convenio,\nat.ie_tipo_atendimento,\nx.nr_interno_conta,\npf.dt_nascimento,\npf.nr_cpf,\nx.cd_medico_req,\npf.ie_sexo,\npf.cd_pessoa_fisica,\nx.classif,\nx.tuss,\nx.nr_seq_grupo_rec,\nx.dt_atualizacao,\nat.nr_atendimento\n\norder by 5,3 desc",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Processa Itens",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Sadalla_Tasy_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SMART_ITAIGARA_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SMART_INOB_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SMART_HOSL_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SMART_ITABUNA_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ProcessTempItems]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Tabela Final",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Processa Itens",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from TEMPTASY\nWhere Processed = 'Sim'"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "DS_MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int64"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										},
										"sink": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MEDICO_EXECUTOR_PARCEIRO",
											"type": "String"
										},
										"sink": {
											"name": "MEDICO_EXECUTOR_PARCEIRO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlProcedimentosTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Temp Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Tabela Final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TRUNCATETEMPTABLE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SMART_ITAIGARA_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart DayHorc Itaigara' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,'') as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,'' as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_INOB_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart INOB' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,'') as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,'' as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_HOSL_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart HOSL' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,'') as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,'' as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_ITABUNA_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart DayHorc Itabuna' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,'') as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,'' as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Producao Medica/Produção"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \n\n'Tasy Cloud' as BASE,\ne.cd_cgc as CNPJ,\ne.nm_fantasia_estab as marca,\np.dt_atualizacao,\np.nr_atendimento,\nat.dt_entrada,\np.nr_interno_conta,\n--obter_nome_estab(c.cd_estabelecimento) as ds_estabelecimento,\npf.cd_pessoa_fisica,\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\np.cd_convenio as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\np.cd_medico_executor,\nobter_nome_pf(p.cd_medico_executor) as ds_medico_executor,\np.cd_medico_req as cd_medico_requisitante,\nobter_nome_pf(p.cd_medico_req) as ds_medico_requisitante,\np.ie_origem_proced as ie_origem_procedimento,\np.cd_procedimento,\nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) as ds_procedimento, \nobter_valor_dominio(19,pr.ie_classificacao) as ds_classificacao,\np.qt_procedimento,\n--c.vl_conta,\np.vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\n'' as cd_tuss\nfrom procedimento_paciente p,\natendimento_paciente at,\npessoa_fisica pf,\nprocedimento pr,\nconta_paciente c,\nestabelecimento e,\nempresa em\nwhere p.nr_atendimento = at.nr_atendimento\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand p.cd_procedimento = pr.cd_procedimento\nand p.ie_origem_proced = pr.ie_origem_proced\nand p.nr_interno_conta = c.nr_interno_conta\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand p.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand at.dt_entrada between sysdate - 100 and sysdate\nand rownum < 100",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Producao Materiais HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select 'Tasy Cloud' as BASE,\ne.cd_cgc as CNPJ,\ne.nm_fantasia_estab as marca,\nmp.dt_atualizacao,\nmp.nr_atendimento,\nat.dt_entrada,\nmp.nr_interno_conta,\npf.cd_pessoa_fisica,\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\nmp.cd_convenio as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nat.cd_medico_atendimento as cd_medico_executor,\nobter_nome_pf(at.cd_medico_atendimento) as ds_medico_executor,\nmp.cd_medico_prescritor as cd_medico_requisitante,\nobter_nome_pf(mp.cd_medico_prescritor) as ds_medico_requisitante,\n' ' ie_origem_procedimento,\nmp.cd_material as cd_procedimento,\nm.ds_material as ds_procedimento, \n'Material'  ds_classificacao,\nmp.qt_material as qt_procedimento,\nmp.vl_material as vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\n'' as cd_tuss\nfrom  conta_paciente c,\n      material_atend_paciente mp,\n      material m,\n      estabelecimento e,\n      atendimento_paciente at,\n      pessoa_fisica pf\nwhere c.nr_atendimento = mp.nr_atendimento\nand c.nr_interno_conta = mp.nr_interno_conta\nand mp.cd_material = m.cd_material\nand c.cd_estabelecimento = e.cd_estabelecimento\nand mp.nr_atendimento = at.nr_atendimento\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand mp.dt_atualizacao between inicio_dia(sysdate - 90) and (sysdate)\nand mp.cd_motivo_exc_conta is null\nand rownum < 100",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select cn.cd_convenio, cn.ds_convenio, e.cd_estabelecimento, e.cd_cgc as cnpj\nfrom convenio cn,\n     convenio_estabelecimento ce,\n     estabelecimento e\nwhere cn.cd_convenio = ce.cd_convenio\nand ce.cd_estabelecimento = e.cd_estabelecimento\norder by 2",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.cd_setor_atendimento, a.ds_setor_atendimento, e.cd_cgc as cnpj\nfrom setor_atendimento a,\nestabelecimento e\nwhere a.cd_estabelecimento = e.cd_estabelecimento\nand e.ie_situacao = 'A'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica HOSL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "    select top 100\n        'Smart HOSL' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join gcc on (str_emp.str_cod = gcc_cod)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        left outer join tab on (tab_cod = smm_tab_cod)\n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica INOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "    select top 1000 \n        'INOB' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join gcc on (str_emp.str_cod = gcc_cod)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        left outer join tab on (tab_cod = smm_tab_cod)\n    where \n        1 = 1\n        --and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica IOF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "--WITH db as (\n    select \n        top 100\n        'Smart IOF' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc.gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)\n        inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n        inner join gcc ON (gcc_str_cod = str_emp.str_cod)\n\n        left outer join tab on (tab_cod = smm_tab_cod)\n        \n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica Itabuna')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "    select top 100\n        'Smart Itabuna' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join gcc on (str_emp.str_cod = gcc_cod)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        left outer join tab on (tab_cod = smm_tab_cod)\n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica Itaigara')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "    select top 100\n        'Smart Itaigara' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join gcc on (str_emp.str_cod = gcc_cod)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        left outer join tab on (tab_cod = smm_tab_cod)\n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica Oftalmoclin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos Oftamoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select \n        top 100\n        'Oftalmoclin' as BASE\n        ,EMP_CGC as CNPJ\n        ,gcc.gcc_descr as MARCA\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_ATENDIMENTO --duvida\n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIFICACAO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as STATUS_CONTA\n        ,0 as CD_TUSS \n    from \n        osm\n        inner join smm on (smm_osm_serie = osm_serie and smm_osm = osm_num)\n        inner join str str_osm on (str_osm.str_cod = osm_str)\n        inner join str str_emp on (str_osm.str_str_cod = str_emp.str_cod)\n        inner join pac on (pac_reg = osm_pac)\n        inner join cnv on (cnv_cod = osm_cnv)\n        inner join psv psv_exe on (psv_exe.psv_cod = smm_med)\n        inner join psv psv_req on (psv_req.psv_cod = smm_med)\n        inner join smk on (smk_cod = smm_cod and smk_tipo = smm_tpcod)\n        inner join ctf on (ctf_cod = smk_ctf and ctf_tipo = smk_tipo)\n        \n        inner join emp ON (emp_cod = str_emp.str_emp_cod)\n        inner join gcc ON (gcc_str_cod = str_emp.str_cod)\n\n        left outer join tab on (tab_cod = smm_tab_cod)\n        \n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cnv_cod AS CD_CONVENIO, cnv.cnv_nome AS DS_CONVENIO, gcc.gcc_cod AS CD_ESTABELECIMENTO, emp.emp_cgc AS CNPJ\nfrom cnv,\n     gcc,\n     str,\n     emp\nwhere gcc.gcc_str_cod = str_cod\nand str_emp_cod = emp_cod\nand emp_cgc <> '-'\nand cnv_cod <> '999'\nand cnv_stat = 'A'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT STR_COD AS CD_SETOR_ATENDIMENTO, \nSTR_NOME AS DS_SETOR_ATENDIMENTO, \nEMP_CGC AS CNPJ\nFROM STR, EMP\nWHERE STR_EMP_COD = EMP_COD\nAND EMP_CGC <> '-'\nAND STR_COD <> '999'",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Producao Medica Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Producao Procedimentos Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \n\n'Tasy Sadalla' as BASE,\ne.cd_cgc as CNPJ,\ne.nm_fantasia_estab as marca,\np.dt_atualizacao,\np.nr_atendimento,\nat.dt_entrada,\np.nr_interno_conta,\n--obter_nome_estab(c.cd_estabelecimento) as ds_estabelecimento,\npf.cd_pessoa_fisica,\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\np.cd_convenio as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\np.cd_medico_executor,\nobter_nome_pf(p.cd_medico_executor) as ds_medico_executor,\np.cd_medico_req as cd_medico_requisitante,\nobter_nome_pf(p.cd_medico_req) as ds_medico_requisitante,\np.ie_origem_proced as ie_origem_procedimento,\np.cd_procedimento,\nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) as ds_procedimento, \nobter_valor_dominio(19,pr.ie_classificacao) as ds_classificacao,\np.qt_procedimento,\n--c.vl_conta,\np.vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\n'' as cd_tuss\nfrom procedimento_paciente p,\natendimento_paciente at,\npessoa_fisica pf,\nprocedimento pr,\nconta_paciente c,\nestabelecimento e,\nempresa em\nwhere p.nr_atendimento = at.nr_atendimento\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand p.cd_procedimento = pr.cd_procedimento\nand p.ie_origem_proced = pr.ie_origem_proced\nand p.nr_interno_conta = c.nr_interno_conta\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand p.cd_motivo_exc_conta is null\nand c.ie_cancelamento is null\nand at.dt_entrada between sysdate - 100 and sysdate\nand rownum < 100",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Producao Materiais Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select 'Tasy Sadalla' as BASE,\ne.cd_cgc as CNPJ,\ne.nm_fantasia_estab as marca,\nmp.dt_atualizacao,\nmp.nr_atendimento,\nat.dt_entrada,\nmp.nr_interno_conta,\npf.cd_pessoa_fisica,\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\nmp.cd_convenio as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nat.cd_medico_atendimento as cd_medico_executor,\nobter_nome_pf(at.cd_medico_atendimento) as ds_medico_executor,\nmp.cd_medico_prescritor as cd_medico_requisitante,\nobter_nome_pf(mp.cd_medico_prescritor) as ds_medico_requisitante,\n' ' as ie_origem_procedimento,\nmp.cd_material as cd_procedimento,\nm.ds_material as ds_procedimento, \n'Material'  ds_classificacao,\nmp.qt_material as qt_procedimento,\nmp.vl_material as vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\n'' as cd_tuss\nfrom  conta_paciente c,\n      material_atend_paciente mp,\n      material m,\n      estabelecimento e,\n      atendimento_paciente at,\n      pessoa_fisica pf\nwhere c.nr_atendimento = mp.nr_atendimento\nand c.nr_interno_conta = mp.nr_interno_conta\nand mp.cd_material = m.cd_material\nand c.cd_estabelecimento = e.cd_estabelecimento\nand mp.nr_atendimento = at.nr_atendimento\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.dt_entrada between inicio_dia(sysdate - 90) and (sysdate)\nand mp.cd_motivo_exc_conta is null\nand rownum < 100",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Unidade_Producao_Medica",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Convenios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select cn.cd_convenio, cn.ds_convenio, e.cd_estabelecimento, e.cd_cgc as cnpj\nfrom convenio cn,\n     convenio_estabelecimento ce,\n     estabelecimento e\nwhere cn.cd_convenio = ce.cd_convenio\nand ce.cd_estabelecimento = e.cd_estabelecimento\norder by 2",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Convenio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Setor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.cd_setor_atendimento, a.ds_setor_atendimento, e.cd_cgc as cnpj\nfrom setor_atendimento a,\nestabelecimento e\nwhere a.cd_estabelecimento = e.cd_estabelecimento\nand e.ie_situacao = 'A'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Setor",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Produção Médica CSI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Retornos HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ret_Pacientes_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select at.nr_atendimento as ultimo_atendimento, \npf.cd_pessoa_fisica, \nsubstr(pf.nm_pessoa_fisica,1,200) as nm_pessoa_fisica,\nsubstr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\nsubstr(replace(LTRIM(translate(cpf.nr_telefone, translate(cpf.nr_telefone, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone,\nsubstr(cpf.ds_email,1,100) as ds_email,\n\nobter_cgc_estabelecimento(decode(pf.cd_estabelecimento, null, 1, pf.cd_estabelecimento)) as cnpj,\n'Nao informado' marca,\n'Nao informado' sigla_unidade,\n\npf.dt_nascimento,\npf.nr_cpf\n\nfrom pessoa_fisica pf,\natendimento_paciente at,\ncompl_pessoa_fisica cpf\nwhere pf.cd_pessoa_fisica = at.cd_pessoa_fisica (+)\nand pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica\nand cpf.ie_tipo_complemento = 1\nand pf.ie_funcionario = 'N'\nand at.nr_atendimento = (select max(x.nr_atendimento) from atendimento_paciente x where x.cd_pessoa_fisica = pf.cd_pessoa_fisica)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Pacientes_unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ret_Atendimento_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select  at.nr_atendimento, at.cd_medico_resp as cd_medico, at.dt_entrada, at.cd_estabelecimento, e.cd_cgc, pf.nm_pessoa_fisica as nm_medico, e.nm_fantasia_estab, \n        cn.ds_convenio, at.cd_pessoa_fisica\nfrom atendimento_paciente at, \n     estabelecimento e,\n     pessoa_fisica pf,\n     atend_categoria_convenio c,\n     convenio cn\nwhere pf.cd_pessoa_fisica = at.cd_medico_resp\nand at.nr_atendimento = (select max(x.nr_atendimento) from atendimento_paciente x where x.cd_pessoa_fisica = at.cd_pessoa_fisica)\nand at.nr_atendimento = c.nr_atendimento\nand c.cd_convenio = cn.cd_convenio\nand at.cd_estabelecimento = e.cd_estabelecimento",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Atendimentos_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ret_Agendamento_Futuros_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select  a.cd_pessoa_fisica, a.cd_convenio, \nto_char((a.hr_inicio) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda,\npf.nm_pessoa_fisica as nm_medico,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,200) as ds_procedimento_princ,\n\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\n\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf\nwhere a.cd_agenda = ag.cd_agenda\nand ag.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.dt_agenda between inicio_dia(sysdate) and fim_dia(sysdate + 720)\nand a.cd_pessoa_fisica is not null\nand a.hr_inicio = (select max(x.hr_inicio) from agenda_paciente x where x.cd_pessoa_fisica = a.cd_pessoa_fisica)\nand ag.cd_tipo_agenda = 2\ngroup by \na.cd_pessoa_fisica, \na.cd_convenio, \nag.cd_tipo_agenda,\npf.nm_pessoa_fisica,\na.hr_inicio,\na.cd_procedimento,\na.ie_origem_proced,\na.nr_sequencia,\na.nm_usuario_orig",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Agendamentos_Futuros_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ret_Consulta_Paciente_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(o.nr_sequencia) as nr_sequencia, o.dt_atualizacao, o.nr_atendimento, o.cd_medico as cd_medico ,obter_nome_pf(o.cd_medico) as nm_medico, c.qt_periodo||' '||c.ie_periodo as ds_retorno,  substr(z.conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica\nfrom oft_consulta o,\n     (SELECT a.nr_seq_consulta, b.ds_resultado as conduta\n      FROM   med_avaliacao_paciente a \n      inner join med_avaliacao_result b ON b.nr_seq_avaliacao = a.nr_sequencia \n      WHERE  a.nr_seq_tipo_avaliacao = 34 \n      and  b.nr_seq_item = 457 --456, 458 ) \n      GROUP  BY a.nr_seq_consulta, b.ds_resultado) z,\n      oft_conduta c\nwhere o.nr_sequencia = z.nr_seq_consulta\nand o.nr_sequencia = c.nr_seq_consulta\nand o.nr_atendimento is not null\ngroup by o.nr_atendimento, o.dt_atualizacao, o.cd_pessoa_fisica, o.cd_medico, obter_nome_pf(o.cd_medico), z.conduta, c.qt_periodo, c.ie_periodo",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Consulta_Oft_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Create_Proximas_Consultas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Ret_Pacientes_Unidade",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ret_Atendimento_Unidade",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ret_Agendamento_Futuros_Unidade",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ret_Consulta_Paciente_Unidade",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATEPROXIMASCONSULTAS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_tipo_agendas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_marca",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTIPOAGENDAS]",
							"storedProcedureParameters": {
								"FIELDNAME_DEST": {
									"value": "CD_TIPO_AGENDA",
									"type": "String"
								},
								"FIELDNAME_ORIG": {
									"value": "CD_TIPO_AGENDA",
									"type": "String"
								},
								"TABLENAME": {
									"value": "Ret_Proximas_Consultas",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create_Proximas_Consultas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKV2",
							"storedProcedureParameters": {
								"CNPJ_FIELDNAME": {
									"value": "CNPJ",
									"type": "String"
								},
								"INITIALS_FIELDNAME": {
									"value": "SIGLA_UNIDADE",
									"type": "String"
								},
								"MARK_FIELDNAME": {
									"value": "MARCA",
									"type": "String"
								},
								"TABLENAME": {
									"value": "Ret_Proximas_Consultas",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_telefones",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Altera_tipo_agendas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ALTERTELEPHONEMASK]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Altera_marca_TBPacientes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Ret_Pacientes_Unidade",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKV2",
							"storedProcedureParameters": {
								"CNPJ_FIELDNAME": {
									"value": "CNPJ",
									"type": "String"
								},
								"INITIALS_FIELDNAME": {
									"value": "SIGLA_UNIDADE",
									"type": "String"
								},
								"MARK_FIELDNAME": {
									"value": "MARCA",
									"type": "String"
								},
								"TABLENAME": {
									"value": "Ret_Pacientes_Unidade",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento/Retornos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Retornos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ret_Pacientes_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select at.nr_atendimento as ultimo_atendimento, \npf.cd_pessoa_fisica, \nsubstr(pf.nm_pessoa_fisica,1,200) as nm_pessoa_fisica,\nsubstr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\nsubstr(replace(LTRIM(translate(cpf.nr_telefone, translate(cpf.nr_telefone, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone,\nsubstr(cpf.ds_email,1,100) as ds_email,\n\nobter_cgc_estabelecimento(decode(pf.cd_estabelecimento, null, 1, pf.cd_estabelecimento)) as cnpj,\n'Nao informado' marca,\n'Nao informado' sigla_unidade,\n\npf.dt_nascimento,\npf.nr_cpf\n\nfrom pessoa_fisica pf,\natendimento_paciente at,\ncompl_pessoa_fisica cpf\nwhere pf.cd_pessoa_fisica = at.cd_pessoa_fisica (+)\nand pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica\nand cpf.ie_tipo_complemento = 1\nand pf.ie_funcionario = 'N'\nand at.nr_atendimento = (select max(x.nr_atendimento) from atendimento_paciente x where x.cd_pessoa_fisica = pf.cd_pessoa_fisica)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Pacientes_unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ret_Agendamento_Futuros_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.cd_pessoa_fisica, a.cd_convenio, \nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda,\npf.nm_pessoa_fisica as nm_medico,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf\nwhere a.cd_agenda = ag.cd_agenda\nand ag.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.dt_agenda between inicio_dia(sysdate) and fim_dia(sysdate + 720)\nand a.cd_pessoa_fisica is not null\nand a.dt_agenda = (select max(x.dt_agenda) from agenda_consulta x where x.cd_pessoa_fisica = a.cd_pessoa_fisica)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Agendamentos_Futuros_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ret_Consulta_Paciente_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(o.nr_sequencia) as nr_sequencia, o.dt_atualizacao, o.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica\nfrom oft_consulta_medica o,\n     oft_retorno r\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null\ngroup by o.dt_atualizacao ,o.nr_atendimento, o.cd_profissional,obter_nome_pf(o.cd_profissional), r.ds_retorno, o.ds_conduta",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Consulta_Oft_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear_Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Ret_Agendamentos_Fututos_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select a.cd_pessoa_fisica, a.cd_convenio, \nto_char(a.dt_agenda, 'dd/mm/yyyy') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda,\npf.nm_pessoa_fisica as nm_medico,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf\nwhere a.cd_agenda = ag.cd_agenda\nand ag.cd_pessoa_fisica = pf.cd_pessoa_fisica \nand a.dt_agenda between inicio_dia(sysdate) and fim_dia(sysdate + 720)\nand a.cd_pessoa_fisica is not null\nand a.dt_agenda = (select max(x.dt_agenda) from agenda_consulta x where x.cd_pessoa_fisica = a.cd_pessoa_fisica)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Ret_Agendamentos_Futuros_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       substr(replace(LTRIM(translate(cpf.nr_telefone, translate(cpf.nr_telefone, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone\nfrom pessoa_fisica pf,\n     compl_pessoa_fisica cpf\nwhere pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica\nand cpf.ie_tipo_complemento = 1\nand pf.ie_funcionario = 'N'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos_Fututos_Unidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select  a.cd_pessoa_fisica, a.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.dt_agenda) , 'dd/mm/yyyy') as data_agenda,\nto_char((a.dt_agenda) , 'hh24:mi:ss') as hora_agenda,\nag.cd_tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\n'NAO ENCONTRADO' SIGLA_UNIDADE,\n'NAO ENCONTRADO' MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda\nfrom agenda ag,\n     agenda_consulta a,\n     pessoa_fisica pf\nwhere ag.cd_agenda = a.cd_agenda\nand   pf.cd_pessoa_fisica  = a.cd_pessoa_fisica\nand a.dt_agenda between inicio_dia(sysdate) and fim_dia(sysdate + 720)\nand   a.cd_pessoa_fisica is not null",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Agendamentos_Futuros_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear_Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASERETORNOS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Atendimento/Retornos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART - HOSL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SMART_HOSL_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart HOSL' as BASE\n        ,6 as CD_MARCA\n        ,'HOSL' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case str_emp.str_cod\n            when '10' then 13\n            when '70' then 15\n            when '11' then 14\n            when '910' then 13\n            when '191' then 16\n            when '91' then 13\n        end as CD_ESTABELECIMENTO\n        ,case str_emp.str_cod\n            when '10' then 'Gruta'\n            when '70' then 'Patio'\n            when '11' then 'Harmony'\n            when '910' then 'Gruta'\n            when '191' then 'Parque'\n            when '91' then 'Gruta'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)\n)\n\nselect \n    BASE\n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' ))\n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCED_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCED_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Processa Itens",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SMART_HOSL_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ProcessTempItems]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Tasy - Tabela Final",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Processa Itens",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from TEMPTASY\nWhere Processed = 'Sim'"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NR_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "DS_MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCED_PRINCIPAL"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO_PRINCIPAL"
										}
									},
									{
										"source": {
											"name": "DS_PROCED_PRINCIPAL"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										},
										"sink": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TIPO_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CRM",
											"type": "String"
										},
										"sink": {
											"name": "CRM_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MPE",
											"type": "String"
										},
										"sink": {
											"name": "MPE_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INTERCOMPANY",
											"type": "String"
										},
										"sink": {
											"name": "INTERCOMPANY_EXECUTOR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlProcedimentosTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Temp Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Tasy - Tabela Final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TRUNCATETEMPTABLE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Producao Medica/Desenvolvimento"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMART - IOF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Processa Itens",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SMART_IOF_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ProcessTempItems]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Tasy - Tabela Final",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Processa Itens",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from TEMPTASY\nWhere Processed = 'Sim'"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NR_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "DS_MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCED_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCED_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL_FINAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA_AUXILIAR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA_AUXILIAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CATEGORIA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CATEGORIA",
											"type": "String"
										},
										"sink": {
											"name": "DS_CATEGORIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_CLASSIF_LIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										},
										"sink": {
											"name": "QT_AJUSTADA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "DS_STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TIPO_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CRM",
											"type": "String"
										},
										"sink": {
											"name": "CRM_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MPE",
											"type": "String"
										},
										"sink": {
											"name": "MPE_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INTERCOMPANY",
											"type": "String"
										},
										"sink": {
											"name": "INTERCOMPANY_EXECUTOR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlProcedimentosTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Temp Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Tasy - Tabela Final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TRUNCATETEMPTABLE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SMART_IOF_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        'Smart IOF' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case str_emp.str_cod \n            when '008' then 11\n        end as CD_ESTABELECIMENTO\n        ,case str_emp.str_cod \n            when '008' then 'IOF'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and convert(varchar(10), osm_dthr, 103) = convert(varchar(10), getdate(), 103)\n)\n\nselect \n    BASE\n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCED_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO_PRINCIPAL",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCED_PRINCIPAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Producao Medica/Desenvolvimento"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}