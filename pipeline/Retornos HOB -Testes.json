{
	"name": "Retornos HOB -Testes",
	"properties": {
		"activities": [
			{
				"name": "Altera Agendas",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Tasy HTML5",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_ALTERTIPOAGENDAS]",
					"storedProcedureParameters": {
						"FIELDNAME_DEST": {
							"value": "TIPO_AGENDA",
							"type": "String"
						},
						"FIELDNAME_ORIG": {
							"value": "TIPO_AGENDA",
							"type": "String"
						},
						"TABLENAME": {
							"value": "Oft_Consulta_Retorno_Increment_testes",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Tasy HTML5",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "SELECT \n       Obter_nome_estab(Obter_estab_atend(m.nr_atendimento))       AS estabelecimento, \n       obter_cnpj_estabelecimento(Obter_estab_atend(m.nr_atendimento)) as cnpj,\n       m.nr_atendimento, \n       n.nr_prontuario, \n       m.cd_pessoa_fisica, \n       n.nm_pessoa_fisica as nm_paciente, \n       LTRIM(translate(n.nr_tel, translate(n.nr_tel, '1234567890', ' ') , ' ')) as NR_TEL,\n       LTRIM(translate(n.nr_cel, translate(n.nr_cel, '1234567890', ' ') , ' ')) as NR_CEL,\n       LTRIM(translate(n.nr_cel2, translate(n.nr_cel2, '1234567890', ' ') , ' ')) as NR_CEL2,\n       m.cd_medico, \n       m.nm_medico, \n       substr(n.ds_email,1,100) as ds_email, \n       m.nr_seq_consulta, \n       substr(to_char(obter_data_entrada(m.nr_atendimento), 'hh24:mi:ss'),1,50)as hora,\n       substr(to_char(obter_data_entrada(m.nr_atendimento),'dd/mm/yyyy'),1,50) AS data_atendimento,\n       obter_valor_dominio(12,obter_tipo_atendimento(m.nr_atendimento)) as tipo_atendimento,\n       \n       (\n        SELECT to_char(a.dt_agenda, 'hh24:mi:ss')\n        FROM agenda_consulta a\n            , agenda x\n        WHERE a.cd_agenda = x.cd_agenda\n               AND trunc(a.dt_agenda) > trunc(obter_data_entrada(m.nr_atendimento))\n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica\n               AND ROWNUM <= 1\n               AND a.dt_agenda <> obter_data_entrada(m.nr_atendimento)) AS agendado_para_hora,\n               \n        (SELECT to_char(a.dt_agenda, 'dd/mm/yyyy')\n        FROM   agenda_consulta a, \n               agenda x \n        WHERE  a.cd_agenda = x.cd_agenda \n               AND trunc(a.dt_agenda) > trunc(obter_data_entrada(m.nr_atendimento))\n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n               AND ROWNUM <= 1\n               AND a.dt_agenda <> obter_data_entrada(m.nr_atendimento)) AS \n       agendado_para_dia, \n        \n        (SELECT obter_tipo_agenda(a.cd_agenda) as tipo_agenda                     \n        FROM agenda_consulta a\n            , agenda x\n        WHERE a.cd_agenda = x.cd_agenda\n            AND trunc(a.dt_agenda) > trunc(obter_data_entrada(m.nr_atendimento))\n            AND a.cd_pessoa_fisica = m.cd_pessoa_fisica\n            AND ROWNUM <= 1\n            AND a.dt_agenda <> obter_data_entrada(m.nr_atendimento)\n        ) AS tipo_agenda,\n        \n        (select o.ds_retorno from oft_retorno o where o.nr_sequencia = m.nr_seq_retorno) AS retorno_em, \n       \n       (SELECT a.nm_usuario_origem\n        FROM   agenda_consulta a, \n               agenda x \n        WHERE  a.cd_agenda = x.cd_agenda \n               AND trunc(a.dt_agenda) > trunc(obter_data_entrada(m.nr_atendimento))\n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica\n               AND ROWNUM <= 1\n               AND a.dt_agenda <> obter_data_entrada(m.nr_atendimento)) AS usuario, \n               \n       (SELECT 'Consulta Oftalmologica Completa'\n        FROM   agenda_consulta a, \n               agenda x \n        WHERE  a.cd_agenda = x.cd_agenda\n               AND trunc(a.dt_agenda) > trunc(obter_data_entrada(m.nr_atendimento))\n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica\n               AND ROWNUM <= 1\n               AND a.dt_agenda <> obter_data_entrada(m.nr_atendimento)) as procedimentos,\n       \n       '' SIGLA_UNIDADE,\n       '' MARCA,\n       substr(m.conduta,1,1000) as conduta\n       \nFROM   (SELECT a.nr_atendimento, \n               obter_pessoa_atendimento(a.nr_atendimento, 'C') as cd_pessoa_fisica, \n               a.cd_profissional as cd_medico, \n               Obter_nome_pf(a.cd_profissional) nm_medico, \n               a.nr_sequencia             nr_seq_consulta, \n               obter_estab_atend(a.nr_atendimento) as cd_estabelecimento,\n               a.nr_seq_retorno,\n               a.ds_conduta as conduta\n        FROM   oft_consulta_medica a,\n               atendimento_paciente b\n        where  a.nr_atendimento = b.nr_atendimento\n                                     ) m \n       inner join (SELECT cd_pessoa_fisica, \n                          nm_pessoa_fisica, \n                          nr_cel,\n                          nr_cel2,\n                          nr_tel, \n                          nr_prontuario, \n                          ds_email \n                   FROM   (SELECT x.cd_pessoa_fisica, \n                                  Initcap(x.nm_pessoa_fisica) nm_pessoa_fisica, \n                                  x.nr_prontuario, \n                                  x.nr_ddd_celular ||''|| x.nr_telefone_celular       AS nr_cel, \n                                  y.nr_ddd_celular ||''|| y.nr_telefone_celular       AS nr_cel2, \n                                  y.nr_ddd_telefone ||''|| y.nr_telefone              AS nr_tel, \n                                  y.ds_email \nFROM   pessoa_fisica x \n     left join compl_pessoa_fisica y \n       ON y.cd_pessoa_fisica = x.cd_pessoa_fisica \n          AND y.ie_tipo_complemento = 1\nWHERE  x.nr_telefone_celular IS NOT NULL \n OR y.nr_telefone_celular IS NOT NULL \n OR y.nr_telefone IS NOT NULL)) n \n ON n.cd_pessoa_fisica = m.cd_pessoa_fisica \nWHERE  NOT EXISTS (SELECT a.dt_agenda, \n                          a.cd_pessoa_fisica \n                   FROM   agenda_consulta a \n                   where a.cd_pessoa_fisica = m.cd_pessoa_fisica\n                   AND a.dt_agenda > SYSDATE) AND ROWNUM < 1000",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "CloudTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZSQL_TB_Retornos_Incremental_testes",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Altera_marca",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Altera Agendas",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "sp_UPDATETRADEMARKV2",
					"storedProcedureParameters": {
						"CNPJ_FIELDNAME": {
							"value": "CNPJ",
							"type": "String"
						},
						"INITIALS_FIELDNAME": {
							"value": "SIGLA_UNIDADE",
							"type": "String"
						},
						"MARK_FIELDNAME": {
							"value": "MARCA",
							"type": "String"
						},
						"TABLENAME": {
							"value": "Oft_Consulta_Retorno_Increment_testes",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Atendimento/Retornos"
		},
		"annotations": []
	}
}