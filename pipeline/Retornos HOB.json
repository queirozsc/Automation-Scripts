{
	"name": "Retornos HOB",
	"properties": {
		"activities": [
			{
				"name": "Altera Agendas",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Tasy HTML5",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_ALTERTIPOAGENDAS]",
					"storedProcedureParameters": {
						"FIELDNAME_DEST": {
							"value": "TIPO_AGENDA",
							"type": "String"
						},
						"FIELDNAME_ORIG": {
							"value": "TIPO_AGENDA",
							"type": "String"
						},
						"TABLENAME": {
							"value": "Oft_Consulta_Retorno_Increment_testes",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Tasy HTML5",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "SELECT Obter_nome_estab(Obter_estab_atend(m.nr_atendimento)) AS estabelecimento, \n       Obter_cnpj_estabelecimento(Obter_estab_atend(m.nr_atendimento)) \n       AS cnpj, \n       m.nr_atendimento, \n       n.nr_prontuario, \n       m.cd_pessoa_fisica, \n       n.nm_pessoa_fisica nm_paciente, \n       REPLACE(REPLACE(n.nr_tel,')',''),'(','') AS NR_TEL,\n       REPLACE(REPLACE(n.nr_cel,')',''),'(','') AS NR_CEL,\n       REPLACE(REPLACE(n.nr_cel2,')',''),'(','') AS NR_CEL2,\n       m.cd_medico, \n       m.nm_medico, \n       n.ds_email, \n       m.nr_seq_consulta, \n       Substr(To_char(Obter_data_entrada(m.nr_atendimento), 'hh24:mi:ss'), 1, 50 ) AS hora, \n       Substr(To_char(Obter_data_entrada(m.nr_atendimento), 'dd/mm/yyyy'), 1, 50 ) AS data_atendimento, \n       Obter_valor_dominio(12, Obter_tipo_atendimento(m.nr_atendimento)) AS tipo_atendimento, \n       Substr((SELECT To_char(a.dt_agenda, 'dd/mm/yyyy') \n               FROM   agenda_paciente a, \n                      agenda x \n               WHERE  a.cd_agenda = x.cd_agenda \n                      AND a.dt_agenda > Obter_data_entrada(m.nr_atendimento) \n                      AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n                      AND Obter_tipo_agenda(a.cd_agenda) = 2 \n                      AND ROWNUM <= 1), 1, 50) AS agendado_para_dia, \n       Substr((SELECT To_char(a.hr_inicio, 'hh24:mi:ss') \n               FROM   agenda_paciente a, \n                      agenda x \n               WHERE  a.cd_agenda = x.cd_agenda \n                      AND a.dt_agenda > Obter_data_entrada(m.nr_atendimento) \n                      AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n                      AND ROWNUM <= 1), 1, 50) AS agendado_para_hora, \n       (SELECT CASE \n                 WHEN Obter_tipo_agenda(a.cd_agenda) = 2 \n                      AND x.cd_pessoa_fisica IS NULL THEN 2 \n                 WHEN Obter_tipo_agenda(a.cd_agenda) = 2 \n                      AND x.cd_pessoa_fisica IS NOT NULL THEN 3 \n                 WHEN Obter_tipo_agenda(a.cd_agenda) = 1 THEN 1 \n               END tipo_agenda \n        FROM   agenda_paciente a, \n               agenda x \n        WHERE  a.cd_agenda = x.cd_agenda \n               AND a.dt_agenda > Obter_data_entrada(m.nr_atendimento) \n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n               AND ROWNUM <= 1 \n               AND a.dt_agenda <> Obter_data_entrada(m.nr_atendimento)) AS tipo_agenda, \n       (SELECT 'Retorno em ' \n               || Lpad(a.qt_periodo, 2, '0') \n               || Decode(a.ie_periodo, 'D', ' Dias', \n                                       a.ie_periodo) ds_periodo \n        FROM   oft_conduta a \n        WHERE  a.nr_seq_consulta = m.nr_seq_consulta \n               AND a.dt_inativacao IS NULL \n               AND a.ie_situacao = 'A' \n               AND a.nr_sequencia = (SELECT Max(nr_sequencia) \n                                     FROM   oft_conduta \n                                     WHERE  nr_seq_consulta = a.nr_seq_consulta) \n               AND a.qt_periodo IS NOT NULL) AS retorno_em, \n       (SELECT a.nm_usuario_orig \n        FROM   agenda_paciente a, \n               agenda x \n        WHERE  a.cd_agenda = x.cd_agenda \n               AND a.dt_agenda > Obter_data_entrada(m.nr_atendimento) \n               AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n               AND Obter_tipo_agenda(a.cd_agenda) = 2 \n               AND ROWNUM <= 1) AS usuario, \n       Substr((SELECT Listagg(Obter_desc_procedimento(b.cd_procedimento, \n                              b.ie_origem_proced) \n                              || ' Quantidade = ' \n                              || b.qt_exame, ' ;') \n                        within GROUP (ORDER BY \n                        Obter_desc_procedimento(b.cd_procedimento, \n                        b.ie_origem_proced)) \n               FROM   pedido_exame_externo_item b \n                      inner join proc_interno c \n                              ON c.nr_sequencia = b.nr_proc_interno \n                      inner join pedido_exame_externo c \n                              ON c.nr_sequencia = b.nr_seq_pedido \n               WHERE  c.nr_seq_consulta = m.nr_seq_consulta \n                      AND c.ie_situacao = 'A'), 1, 1000) AS procedimentos, \n       '' sigla_unidade, \n       '' marca,\n       substr(m.conduta,1,1000) as conduta\nFROM   (SELECT a.nr_atendimento, \n               a.cd_pessoa_fisica, \n               a.cd_medico, \n               Obter_nome_pf(a.cd_medico) nm_medico, \n               a.nr_sequencia             nr_seq_consulta, \n               a.cd_estabelecimento,\n               '' as conduta\n        FROM   oft_consulta a \n        UNION \n        SELECT a.nr_atendimento, \n               a.cd_pessoa_fisica, \n               a.cd_medico, \n               Obter_nome_pf(a.cd_medico) nm_medico, \n               a.nr_sequencia             nr_seq_consulta, \n               a.cd_estabelecimento,\n               c.conduta\n        FROM   oft_consulta a \n               left join (SELECT Count(1) nr_conduta, \n                                 nr_seq_consulta \n                          FROM   oft_conduta \n                          GROUP  BY nr_seq_consulta) b \n                      ON b.nr_seq_consulta = a.nr_sequencia \n               left join (SELECT a.nr_seq_consulta, b.ds_resultado as conduta,\n                                 Count(1) nr_encaminhamento \n                          FROM   med_avaliacao_paciente a \n                                 inner join med_avaliacao_result b \n                                         ON b.nr_seq_avaliacao = a.nr_sequencia \n                          WHERE  a.nr_seq_tipo_avaliacao = 34 \n                                 AND b.nr_seq_item IN ( 456, 457, 458 ) \n                          GROUP  BY a.nr_seq_consulta, b.ds_resultado ) c \n                      ON c.nr_seq_consulta = a.nr_sequencia \n               left join (SELECT nr_seq_consulta, \n                                 Count(1) nr_procedimento \n                          FROM   pedido_exame_externo \n                          WHERE  ie_situacao = 'A' \n                          GROUP  BY nr_seq_consulta) d \n                      ON d.nr_seq_consulta = a.nr_sequencia \n                         AND ( ( Nvl(b.nr_conduta, 0) > 0 ) \n                                OR ( Nvl(c.nr_encaminhamento, 0) > 0 ) \n                                OR ( Nvl(d.nr_procedimento, 0) > 0 ) )) m \n       inner join (SELECT cd_pessoa_fisica, \n                          nm_pessoa_fisica, \n                          nr_cel, nr_cel2, nr_tel,\n                          nr_prontuario, \n                          ds_email \n                   FROM   (SELECT x.cd_pessoa_fisica, \n                                  Initcap(x.nm_pessoa_fisica) nm_pessoa_fisica, \n                                  x.nr_prontuario, \n                                  x.nr_telefone_celular       AS nr_cel, \n                                  y.nr_telefone_celular       AS nr_cel2, \n                                  y.nr_telefone               AS nr_tel, \n                                  y.ds_email \n                           FROM   pessoa_fisica x \n                                  left join compl_pessoa_fisica y ON y.cd_pessoa_fisica = x.cd_pessoa_fisica AND y.ie_tipo_complemento = 1 \n                           WHERE  x.nr_telefone_celular IS NOT NULL \n                                   OR y.nr_telefone_celular IS NOT NULL \n                                   OR y.nr_telefone IS NOT NULL)) n \n               ON n.cd_pessoa_fisica = m.cd_pessoa_fisica \nWHERE  NOT EXISTS (SELECT a.dt_agenda, \n                          a.cd_pessoa_fisica \n                   FROM   agenda_paciente a \n                   WHERE  Obter_tipo_agenda(a.cd_agenda) = 2 \n                          AND a.cd_pessoa_fisica = m.cd_pessoa_fisica \n                          AND a.dt_agenda > SYSDATE) and m.conduta is not null\nand rownum < 1000",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "CloudTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZSQL_TB_Retornos_Incremental",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Altera_marca",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Altera Agendas",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "sp_UPDATETRADEMARKV2",
					"storedProcedureParameters": {
						"CNPJ_FIELDNAME": {
							"value": "CNPJ",
							"type": "String"
						},
						"INITIALS_FIELDNAME": {
							"value": "SIGLA_UNIDADE",
							"type": "String"
						},
						"MARK_FIELDNAME": {
							"value": "MARCA",
							"type": "String"
						},
						"TABLENAME": {
							"value": "Oft_Consulta_Retorno_Increment_testes",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Atendimento/Retornos"
		},
		"annotations": []
	}
}