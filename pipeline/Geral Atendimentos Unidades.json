{
	"name": "Geral Atendimentos Unidades",
	"properties": {
		"activities": [
			{
				"name": "TasyHTML5",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "select unique min(at.dt_entrada) as dt_atendimento, \nobter_nome_estab(at.cd_estabelecimento) as unidade, \npf.nr_prontuario, obter_nome_pf(at.cd_pessoa_fisica) as paciente, pf.nr_cpf, cpf.cd_cep, pf.ie_sexo, pf.dt_nascimento\nfrom atendimento_paciente at,\n     pessoa_fisica pf,\n     compl_pessoa_fisica cpf,\n     conta_paciente ct\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica\nand at.nr_atendimento = ct.nr_atendimento\nand cpf.ie_tipo_complemento = 1\nand at.dt_cancelamento is null\nand at.dt_entrada between trunc(sysdate - 30,'MM') and trunc(sysdate, 'MM') - 1\ngroup by obter_nome_estab(at.cd_estabelecimento), pf.nr_prontuario, at.cd_pessoa_fisica, pf.nr_cpf, cpf.cd_cep, pf.ie_sexo, pf.dt_nascimento\norder by 1",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "CloudTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "TasySadalla",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "select unique min(at.dt_entrada) as dt_atendimento, \nobter_nome_estab(at.cd_estabelecimento) as unidade, \npf.nr_prontuario, obter_nome_pf(at.cd_pessoa_fisica) as paciente, pf.nr_cpf, cpf.cd_cep, pf.ie_sexo, pf.dt_nascimento\nfrom atendimento_paciente at,\n     pessoa_fisica pf,\n     compl_pessoa_fisica cpf,\n     conta_paciente ct\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica\nand at.nr_atendimento = ct.nr_atendimento\nand cpf.ie_tipo_complemento = 1\nand at.dt_cancelamento is null\nand at.dt_entrada between trunc(sysdate - 30,'MM') and trunc(sysdate, 'MM') - 1\ngroup by obter_nome_estab(at.cd_estabelecimento), pf.nr_prontuario, at.cd_pessoa_fisica, pf.nr_cpf, cpf.cd_cep, pf.ie_sexo, pf.dt_nascimento\norder by 1",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SadallaTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SmartItaigara",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT \nDISTINCT OSM_DTHR as data_entrada\n    ,gcc_descr as unidade\n    , pac_pront as nr_prontuario\n    , pac_nome as nm_paciente\n    , pac_numcpf as nr_cpf\n    , pac_Cep as nr_cep\n    , pac_sexo as ie_sexo\n    , pac_nasc as dt_nascimento\nFROM osm,\nsmm,\npac,\nstr,\ngcc\nwhere smm_osm_serie = osm_serie AND smm_osm = osm_num\nand  pac_reg = osm_pac\nand  osm.osm_str = str_cod\nand  str_str_cod = gcc_str_cod\nand smm_sfat NOT IN ('C')\n    AND (smm.smm_sfat <> 'C')\n    AND (smm.smm_exec <> 'C')\n    AND (smm.smm_pacote IS NULL OR (smm.smm_pacote = 'P'))\n    AND osm_dthr between DATEADD(month, DATEDIFF(month, 0, CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1), 0) and CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "data_entrada",
									"type": "String"
								},
								"sink": {
									"name": "data_entrada",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "unidade",
									"type": "String"
								},
								"sink": {
									"name": "ds_unidade",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_prontuario",
									"type": "Int32"
								},
								"sink": {
									"name": "nr_prontuario",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "nm_paciente",
									"type": "String"
								},
								"sink": {
									"name": "nm_paciente",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cpf",
									"type": "String"
								},
								"sink": {
									"name": "nr_cpf",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cep",
									"type": "String"
								},
								"sink": {
									"name": "nr_cep",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ie_sexo",
									"type": "String"
								},
								"sink": {
									"name": "ie_sexo",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "dt_nascimento",
									"type": "String"
								},
								"sink": {
									"name": "dt_nascimento",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_ITAIGARA_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SmartIOF",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT \nDISTINCT OSM_DTHR as data_entrada\n    ,gcc_descr as unidade\n    , pac_pront as nr_prontuario\n    , pac_nome as nm_paciente\n    , pac_numcpf as nr_cpf\n    , pac_Cep as nr_cep\n    , pac_sexo as ie_sexo\n    , pac_nasc as dt_nascimento\nFROM osm,\nsmm,\npac,\nstr,\ngcc\nwhere smm_osm_serie = osm_serie AND smm_osm = osm_num\nand  pac_reg = osm_pac\nand  osm.osm_str = str_cod\nand  str_str_cod = gcc_str_cod\nand smm_sfat NOT IN ('C')\n    AND (smm.smm_sfat <> 'C')\n    AND (smm.smm_exec <> 'C')\n    AND (smm.smm_pacote IS NULL OR (smm.smm_pacote = 'P'))\n    AND osm_dthr between DATEADD(month, DATEDIFF(month, 0, CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1), 0) and CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "data_entrada",
									"type": "String"
								},
								"sink": {
									"name": "data_entrada",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "unidade",
									"type": "String"
								},
								"sink": {
									"name": "ds_unidade",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_prontuario",
									"type": "Int32"
								},
								"sink": {
									"name": "nr_prontuario",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "nm_paciente",
									"type": "String"
								},
								"sink": {
									"name": "nm_paciente",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cpf",
									"type": "String"
								},
								"sink": {
									"name": "nr_cpf",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cep",
									"type": "String"
								},
								"sink": {
									"name": "nr_cep",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ie_sexo",
									"type": "String"
								},
								"sink": {
									"name": "ie_sexo",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "dt_nascimento",
									"type": "String"
								},
								"sink": {
									"name": "dt_nascimento",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_IOF_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SmartHOSL",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT \nDISTINCT OSM_DTHR as data_entrada\n    ,gcc_descr as unidade\n    , pac_pront as nr_prontuario\n    , pac_nome as nm_paciente\n    , pac_numcpf as nr_cpf\n    , pac_Cep as nr_cep\n    , pac_sexo as ie_sexo\n    , pac_nasc as dt_nascimento\nFROM osm,\nsmm,\npac,\nstr,\ngcc\nwhere smm_osm_serie = osm_serie AND smm_osm = osm_num\nand  pac_reg = osm_pac\nand  osm.osm_str = str_cod\nand  str_str_cod = gcc_str_cod\nand smm_sfat NOT IN ('C')\n    AND (smm.smm_sfat <> 'C')\n    AND (smm.smm_exec <> 'C')\n    AND (smm.smm_pacote IS NULL OR (smm.smm_pacote = 'P'))\n    AND osm_dthr between DATEADD(month, DATEDIFF(month, 0, CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1), 0) and CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "data_entrada",
									"type": "String"
								},
								"sink": {
									"name": "data_entrada",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "unidade",
									"type": "String"
								},
								"sink": {
									"name": "ds_unidade",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_prontuario",
									"type": "Int32"
								},
								"sink": {
									"name": "nr_prontuario",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "nm_paciente",
									"type": "String"
								},
								"sink": {
									"name": "nm_paciente",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cpf",
									"type": "String"
								},
								"sink": {
									"name": "nr_cpf",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cep",
									"type": "String"
								},
								"sink": {
									"name": "nr_cep",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ie_sexo",
									"type": "String"
								},
								"sink": {
									"name": "ie_sexo",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "dt_nascimento",
									"type": "String"
								},
								"sink": {
									"name": "dt_nascimento",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_HOSL_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SmartItabuna",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT \nDISTINCT OSM_DTHR as data_entrada\n    ,gcc_descr as unidade\n    , pac_pront as nr_prontuario\n    , pac_nome as nm_paciente\n    , pac_numcpf as nr_cpf\n    , pac_Cep as nr_cep\n    , pac_sexo as ie_sexo\n    , pac_nasc as dt_nascimento\nFROM osm,\nsmm,\npac,\nstr,\ngcc\nwhere smm_osm_serie = osm_serie AND smm_osm = osm_num\nand  pac_reg = osm_pac\nand  osm.osm_str = str_cod\nand  str_str_cod = gcc_str_cod\nand smm_sfat NOT IN ('C')\n    AND (smm.smm_sfat <> 'C')\n    AND (smm.smm_exec <> 'C')\n    AND (smm.smm_pacote IS NULL OR (smm.smm_pacote = 'P'))\n    AND osm_dthr between DATEADD(month, DATEDIFF(month, 0, CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1), 0) and CONVERT(DATETIME, CONVERT(VARCHAR(7), GETDATE(), 120) + '-01') - 1"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "data_entrada",
									"type": "String"
								},
								"sink": {
									"name": "data_entrada",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "unidade",
									"type": "String"
								},
								"sink": {
									"name": "ds_unidade",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_prontuario",
									"type": "Int32"
								},
								"sink": {
									"name": "nr_prontuario",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "nm_paciente",
									"type": "String"
								},
								"sink": {
									"name": "nm_paciente",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cpf",
									"type": "String"
								},
								"sink": {
									"name": "nr_cpf",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "nr_cep",
									"type": "String"
								},
								"sink": {
									"name": "nr_cep",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ie_sexo",
									"type": "String"
								},
								"sink": {
									"name": "ie_sexo",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "dt_nascimento",
									"type": "String"
								},
								"sink": {
									"name": "dt_nascimento",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_ITABUNA_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_TB_Atend_Pac",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "Atendimento"
		},
		"annotations": []
	}
}